<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>AltiumDesigner绘制PCB(一)</title>
    <url>/2020/04/26/AltiumDesigner%E7%BB%98%E5%88%B6PCB(%E4%B8%80)/</url>
    <content><![CDATA[<p>本教程以绘制<code>4x4</code>矩阵键盘为例，在绘制<code>PCB</code>前，请确保你已安装<code>Altium Designer</code>。</p>
<p>本节主要教大家新建<code>PCB</code>工程，了解工程目录的基本结构。</p>
<h2 id="1-1-新建PCB工程"><a href="#1-1-新建PCB工程" class="headerlink" title="1.1 新建PCB工程"></a>1.1 新建PCB工程</h2><p>打开<code>Altium Designer</code>，点击<code>File(文件)</code>，选择<code>Project(工程)</code>，点击<code>PCB Project</code>，新建<code>PCB</code>工程，命名为<code>matrixKeyboard</code>：</p>
<p><img src="https://i.loli.net/2021/04/28/djaF7D84IiGMvkK.png" alt="创建PCB工程"></p>
<p>创建完工程后，在工程目录下新建<code>Lib</code>和<code>Doc</code>两个文件夹用于保存库文件和图文件。</p>
<h2 id="1-2-添加原理图库"><a href="#1-2-添加原理图库" class="headerlink" title="1.2 添加原理图库"></a>1.2 添加原理图库</h2><p>选中<code>matrixKeyboard.PrjPcb</code>，鼠标单击右键，添加新的文件到工程，选择<code>schematic library</code>，命名为<code>matrixKeyboard.SchLib</code>保存到<code>Lib</code>文件夹下。</p>
<p><img src="https://i.loli.net/2021/04/28/RUwQjfWT8i1LJME.png" alt="添加原理图库"></p>
<h2 id="1-3-添加封装库"><a href="#1-3-添加封装库" class="headerlink" title="1.3 添加封装库"></a>1.3 添加封装库</h2><p>选中<code>matrixKeyboard.PrjPcb</code>，鼠标单击右键，添加新的文件到工程，选择<code>PCB library</code>，命名为为<code>matrixKeyboard.PcbLib</code>保存到<code>Lib</code>文件夹下。</p>
<p><img src="https://i.loli.net/2021/04/28/VL7XgJPHwDMN49d.png" alt="添加封装库"></p>
<h2 id="1-4-添加电路原理图"><a href="#1-4-添加电路原理图" class="headerlink" title="1.4 添加电路原理图"></a>1.4 添加电路原理图</h2><p>选中<code>matrixKeyboard.PrjPcb</code>，鼠标单击右键，添加新的文件到工程，选择<code>shematic</code>，命名为<code>matrixKeyboard.SchDoc</code>保存到<code>Doc</code>文件夹下。</p>
<p><img src="https://i.loli.net/2021/04/28/9tP3MHz2QCIVbA5.png" alt="添加电路原理图"></p>
<h2 id="1-5-添加PCB图"><a href="#1-5-添加PCB图" class="headerlink" title="1.5 添加PCB图"></a>1.5 添加PCB图</h2><p>选中<code>matrixKeyboard.PrjPcb</code>，鼠标单击右键，添加新的文件到工程，选择<code>PCB</code>，命名为<code>matrixKeyboard.PcbDoc</code>保存到<code>Doc</code>文件夹下。</p>
<p><img src="https://i.loli.net/2021/04/28/RBZ12aeFU7KbLyd.png" alt="添加PCB图"></p>
<p>创建好的<code>PCB</code>工作目录结构如下所示：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">.</span><br><span class="line">├── Doc</span><br><span class="line">      ├── matrixKeyboard.SchDoc</span><br><span class="line">      ├── matrixKeyboard.PcbDoc</span><br><span class="line">├── History</span><br><span class="line">├── Lib</span><br><span class="line">      ├── matrixKeyboard.SchLib</span><br><span class="line">      ├── matrixKeyboard.PcbLib</span><br><span class="line">├── matrixKeyboard.PrjPcb</span><br></pre></td></tr></table></figure>

<p><img src="https://i.loli.net/2021/04/28/uNI4zbKlAaEeSoO.png" alt="创建好的PCB工程目录结构"></p>
<p>在一个PCB目录下一般包含五个文件(<code>History</code>除外)，以下是文件对应的描述：</p>
<table>
<thead>
<tr>
<th align="left">文件</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left">matrixKeyboard.PrjPcb</td>
<td align="left">PCB工程文件</td>
</tr>
<tr>
<td align="left">matrixKeyboard.SchLib</td>
<td align="left">原理图库文件</td>
</tr>
<tr>
<td align="left">matrixKeyboard.PcbLib</td>
<td align="left">封装库文件</td>
</tr>
<tr>
<td align="left">matrixKeyboard.SchDoc</td>
<td align="left">电路原理图文件</td>
</tr>
<tr>
<td align="left">matrixKeyboard.PcbDoc</td>
<td align="left">PCB图文件</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>技术</tag>
        <tag>AltiumDesigner</tag>
        <tag>PCB</tag>
      </tags>
  </entry>
  <entry>
    <title>AltiumDesigner绘制PCB(三)</title>
    <url>/2020/04/28/AltiumDesigner%E7%BB%98%E5%88%B6PCB(%E4%B8%89)/</url>
    <content><![CDATA[<p>本教程以绘制<code>4x4</code>矩阵键盘为例，在绘制<code>PCB</code>前，请确保你已安装<code>Altium Designer</code>。</p>
<p>本节主要教大家为元器件绘制封装图，了解器件封装图的概念。</p>
<h2 id="1-基本概念"><a href="#1-基本概念" class="headerlink" title="1 基本概念"></a>1 基本概念</h2><p>器件的封装图相当于器件的”衣服“，必须要做到合乎标准，不然的话，无论是插件和贴片元件都无法焊接到电路板上。</p>
<h2 id="2-绘制流程"><a href="#2-绘制流程" class="headerlink" title="2 绘制流程"></a>2 绘制流程</h2><p>下面为按键绘制封装，由于按键属于插件，只需要根据按键四个引脚的距离即可放置对应的焊盘，在左侧导航栏点击<code>matrixKeyboard.PcbLib</code>进入PCB封装绘制界面，在左侧导航栏下方点击<code>PCB Library</code>进入封装器件列表：</p>
<p><img src="https://i.loli.net/2021/04/28/Gzn4ZljJS29WsOP.png" alt="封装器件列表"></p>
<p>单击<code>PCBCOMPONENT_1</code>进入编辑，如果没有卡尺去测量按键引脚距离，可以把按键安装在洞洞板上，洞洞板两个孔之间的距离刚好为<code>100mil</code>。</p>
<div class="note warning flat"><p>注意，<code>1mil=0.0254cm</code>。</p>
</div>

<p>经过在洞洞板上的测试，按键横向的两个引脚距离为<code>300mil</code>，纵向的两个引脚距离为<code>200mil</code>，在顶部导航栏点击放置焊盘：</p>
<p><img src="https://i.loli.net/2021/04/28/84tSXv9bxVd3GIz.png" alt="点击放置焊盘"></p>
<p>当出现焊盘时，按一下<kbd>Tab</kbd>键，进入焊盘属性设置界面：</p>
<p><img src="https://i.loli.net/2021/04/28/fFN5VJqt2AIM1TX.png" alt="修改焊盘属性"></p>
<p>修改完成后，依次放置四个焊盘：</p>
<p><img src="https://i.loli.net/2021/04/28/jUyZdILwVkbrOQK.png" alt="放置四个焊盘"></p>
<p>然后为它绘制一个丝印轮廓，在底部选择<code>Top Overlay(丝印层)</code>，再点击顶部导航栏的画笔(放置线条)，绘制一个矩形丝印：</p>
<p><img src="https://i.loli.net/2021/04/28/K4own37IlBZ68vb.png" alt="绘制矩形丝印"></p>
<p>如果有<code>3D</code>模型文件，还可以在顶部导航栏点击放置，选择<code>3D</code>元件体：</p>
<p><img src="https://i.loli.net/2021/04/28/mPLG7zHjrNX5RfF.png" alt="放置3D元件体"></p>
<p><img src="https://i.loli.net/2021/04/28/ugAXDtFB3bkILmK.png" alt="添加通用3D模型文件"></p>
<p><img src="https://i.loli.net/2021/04/28/4tnG6WO5DY1Ahgw.png" alt="放置好3D模型"></p>
<p>按下数字键<code>3</code>可进入<code>3D</code>模式预览(按<code>2</code>可返回<code>2D</code>模式)，查看器件的<code>3D</code>模型是否与焊盘匹配：</p>
<p><img src="https://i.loli.net/2021/04/28/NA6gzTiucZyUs1W.png" alt="3D模型预览"></p>
<p>在左侧导航栏的<code>PCB Library</code>中双击<code>PCBCOMPONENT_1</code>进入器件属性修改界面：</p>
<p><img src="https://i.loli.net/2021/04/28/pImieX1fORoVF4c.png" alt="封装图修改器件属性"></p>
<p>按照以上方法，可以再绘制一个<code>8Pin</code>的排针封装，在左侧导航栏单击右键选择新建空白元件，绘制完后如下所示：</p>
<p><img src="https://i.loli.net/2021/04/28/tUdA57sG6MQpLNe.png" alt="8Pin排针封装"></p>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>技术</tag>
        <tag>AltiumDesigner</tag>
        <tag>PCB</tag>
      </tags>
  </entry>
  <entry>
    <title>AltiumDesigner绘制PCB(二)</title>
    <url>/2020/04/27/AltiumDesigner%E7%BB%98%E5%88%B6PCB(%E4%BA%8C)/</url>
    <content><![CDATA[<p>本教程以绘制<code>4x4</code>矩阵键盘为例，在绘制<code>PCB</code>前，请确保你已安装<code>Altium Designer</code>。</p>
<p>本节主要教大家为元器件绘制原理图，了解器件原理图的概念。</p>
<h2 id="1-基本概念"><a href="#1-基本概念" class="headerlink" title="1 基本概念"></a>1 基本概念</h2><p>器件的原理图是对器件外形的提炼和简化，绘制电路图会更加简洁美观。</p>
<h2 id="2-绘制流程"><a href="#2-绘制流程" class="headerlink" title="2 绘制流程"></a>2 绘制流程</h2><p>下面为按键绘制原理图，选中<code>matrixKeyboard.SchLib</code>进入原理图绘制界面，在左侧导航栏下点击<code>SCH Library</code>进入器件列表：</p>
<p><img src="https://i.loli.net/2021/04/28/Ak6T1Loav7pwCeM.png" alt="器件列表"></p>
<p>单击<code>Component_1</code>进入编辑，在<code>Altium Designer</code>顶部导航栏点击<img src="https://i.loli.net/2021/04/28/OoD2ecpvxLwJ1Xk.png" alt="绘图工具"></p>
<p>在这里可以选择画笔来绘制需要的器件外形，也可以直接使用放置矩形来作为按键的外形：</p>
<p><img src="https://i.loli.net/2021/04/28/PjRWET5muaNZJMe.png" alt="放置矩形"></p>
<p>放置矩形后可以添加一个圆圈表示按钮(当然，也可以不加)，然后再为按键添加四个引脚，点击绘图工具，选择放置管脚：</p>
<p><img src="https://i.loli.net/2021/04/28/Hb9TnQvqxljZPRf.png" alt="放置管脚"></p>
<p>当出现管脚时，按一下<kbd>Tab</kbd>键，进入管脚属性设置界面：</p>
<p><img src="https://i.loli.net/2021/04/28/g9b5HVcyjaoYwz2.png" alt="设置管脚属性"></p>
<p>依次放置完四个管脚后如下所示：</p>
<p>注意，如果出现管脚无法靠近矩形的情况，可以点击顶部导航栏的网格设置捕捉栅格大小为<code>1Grid</code>。</p>
<p><img src="https://i.loli.net/2021/04/28/dlexgSWCA5Zrj8J.png" alt="放置完管脚"></p>
<p>到这里，一个按键的原理图就算是基本绘制完成了，不过还要修改一下器件属性。</p>
<p>在左侧导航栏的<code>SCH Library</code>中双击<code>Component_1</code>进入器件属性修改界面：</p>
<p><img src="https://i.loli.net/2021/04/28/OKLRxamBQgvJ3eb.png" alt="原理图修改器件属性"></p>
<p>修改完成并保存后，可以在右侧导航栏查看原理图库：</p>
<p><img src="https://i.loli.net/2021/04/28/exGT4ZkXwQpYJmr.png" alt="查看原理图库"></p>
<p>按照以上方法，可以再绘制一个<code>8Pin</code>的排针，在左侧导航栏点击添加：</p>
<p><img src="https://i.loli.net/2021/04/28/NH6Tb25f7DjKGny.png" alt="添加8Pin排针"></p>
<p>绘制好<code>8Pin</code>排针后如下所示：</p>
<p><img src="https://i.loli.net/2021/04/28/zRvOnoSQKArIxkU.png" alt="Pin原理图"></p>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>技术</tag>
        <tag>AltiumDesigner</tag>
        <tag>PCB</tag>
      </tags>
  </entry>
  <entry>
    <title>AltiumDesigner绘制PCB(四)</title>
    <url>/2020/04/29/AltiumDesigner%E7%BB%98%E5%88%B6PCB(%E5%9B%9B)/</url>
    <content><![CDATA[<p>本教程以绘制<code>4x4</code>矩阵键盘为例，在绘制<code>PCB</code>前，请确保你已安装<code>Altium Designer</code>。</p>
<p>本节主要教大家绘制电路原理图。</p>
<h2 id="1-准备工作"><a href="#1-准备工作" class="headerlink" title="1 准备工作"></a>1 准备工作</h2><p>在绘制电路原理图之前，还需要为器件的原理图添加封装。在左侧导航栏选中<code>matrixKeyboard.SchLib</code>进入原理图库界面，点击符号管理器，再选择要添加封装的器件，点击<code>Add Footprint</code>，输入你之前绘制的封装器件名称：</p>
<p><img src="https://i.loli.net/2021/04/28/AUlHNsS3fpkVK7F.png" alt="符号管理器"></p>
<p><img src="https://i.loli.net/2021/04/28/wt5XpZWainBqvYR.png" alt="为器件添加封装"></p>
<p>依次添加完成后需要保存一下，然后点击右侧的库来查看原理图库的器件是不是都有封装：</p>
<p><img src="https://i.loli.net/2021/04/28/tTvRw8IhcEFyasZ.png" alt="查看Key封装"></p>
<p><img src="https://i.loli.net/2021/04/28/fmSuU6dZcxNlKnz.png" alt="查看Pin封装"></p>
<h2 id="2-开始绘制"><a href="#2-开始绘制" class="headerlink" title="2 开始绘制"></a>2 开始绘制</h2><p>在左侧导航栏选中<code>matrixKeyboard.SchDoc</code>进入电路原理图绘制界面，在右侧的库中找到<code>matrixKeyboard.SchLib</code>，双击<code>Key</code>元器件，然后按一下<kbd>Tab</kbd>键进入元器件属性编辑界面：</p>
<p><img src="https://i.loli.net/2021/04/28/PWHhlV4XtxUoc3g.png" alt="元器件属性编辑界面"></p>
<p>然后依次排列成<code>4x4</code>矩阵形状：</p>
<p><img src="https://i.loli.net/2021/04/28/zhNWYklindSxs5w.png" alt="4x4矩阵"></p>
<p>按照矩阵键盘逻辑进行电气连线：</p>
<p><img src="https://i.loli.net/2021/04/28/dA9Tyip3WlS8nqJ.png" alt="绘制完电路"></p>
<h2 id="3-导出到PCB图"><a href="#3-导出到PCB图" class="headerlink" title="3 导出到PCB图"></a>3 导出到PCB图</h2><p>在顶部导航栏点击设计，选择<code>Update PCB Document matrixKeyboard.PcbDoc</code>导出到<code>PCB</code>图：</p>
<p><img src="https://i.loli.net/2021/04/28/DmiQFYlruTRgw6S.png" alt="工程变更指令界面"></p>
<p>点击验证变更，确保无误后再点击执行变更即可导出到<code>PCB</code>图：</p>
<p><img src="https://i.loli.net/2021/04/28/R4EcFtSrJHqhGCW.png" alt="执行变更成功"></p>
<p>导出后的元件被一个红框包裹着，单击选中红框后可以按<kbd>Del</kbd>键删掉：</p>
<p><img src="https://i.loli.net/2021/04/28/LO8HoyjZGwBvM6h.png" alt="导出后的元件"></p>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>技术</tag>
        <tag>AltiumDesigner</tag>
        <tag>PCB</tag>
      </tags>
  </entry>
  <entry>
    <title>AltiumDesigner绘制PCB(五)</title>
    <url>/2020/04/30/AltiumDesigner%E7%BB%98%E5%88%B6PCB(%E4%BA%94)/</url>
    <content><![CDATA[<p>本教程以绘制<code>4x4</code>矩阵键盘为例，在绘制<code>PCB</code>前，请确保你已安装<code>Altium Designer</code>。</p>
<p>本节主要教大家绘制<code>PCB</code>图。</p>
<h2 id="1-排版布局"><a href="#1-排版布局" class="headerlink" title="1 排版布局"></a>1 排版布局</h2><p>在<code>PCB</code>图中选中元器件，利用对齐工具进行排版布局：</p>
<p><img src="https://i.loli.net/2021/04/28/qHTZbIGE5NYaQUA.png" alt="对元件进行布局"></p>
<p>然后再添加四个焊盘作为铜柱通孔，点击焊盘后按一下<kbd>Tab</kbd>键，修改焊盘属性中的开孔尺寸为<code>3mm</code>，X、Y尺寸为<code>3.5mm</code>。</p>
<p><img src="https://i.loli.net/2021/04/28/cirO52LBTKUxMGt.png" alt="铜柱焊盘"></p>
<p><img src="https://i.loli.net/2021/04/28/Pisuthy6HAlrEZp.png" alt="放置四个铜柱焊盘"></p>
<h2 id="2-定义板子形状"><a href="#2-定义板子形状" class="headerlink" title="2 定义板子形状"></a>2 定义板子形状</h2><p>在底部选择<code>Keep-Out Layer</code>，再点击顶部导航栏的画笔(放置线条)，将所有元件框起来后，按住<code>shift</code>键选中四根线条：</p>
<p><img src="https://i.loli.net/2021/04/28/vl4gOo8nxQXNAde.png" alt="shift选中线条"></p>
<p>然后点击顶部导航的设计，选择板子形状，点击按照选择对象定义：</p>
<p><img src="https://i.loli.net/2021/04/28/oQJIAXR3gupLMtm.png" alt="框选后的板子形状"></p>
<h2 id="3-电气走线"><a href="#3-电气走线" class="headerlink" title="3 电气走线"></a>3 电气走线</h2><p>下面就根据白色引导线去进行电气连接，在底部导航栏选择<code>Bottom Layer(底层)</code>，然后使用<code>PT</code>快捷键(英文键盘模式下，先按<kbd>P</kbd>再按<kbd>T</kbd>)进行走线(点击焊盘后按一下<kbd>Tab</kbd>键可以编辑线宽，设定最小线宽为<code>10mil</code>，优先线宽为<code>50mil</code>，最大线宽为<code>100mil</code>，一般来说走线越宽越好)：</p>
<p><img src="https://i.loli.net/2021/04/28/RsjkFKyqTAcIrPU.png" alt="PCB图绘制完成"></p>
<h2 id="4-铺铜操作"><a href="#4-铺铜操作" class="headerlink" title="4 铺铜操作"></a>4 铺铜操作</h2><p>为了方便腐蚀，我们一般会对电路板进行铺铜，这样能减小腐蚀面积，能更快地腐蚀完毕，首先单击选中一个铜柱焊盘，选择选项，编辑网络，添加一个<code>GND</code>网络标号，双击铜柱焊盘，把焊盘属性中的网络选择为<code>GND</code>(其余三个铜柱焊盘也需要选择为<code>GND</code>网络)：</p>
<p><img src="https://i.loli.net/2021/04/28/TXsFeMNumrkUItY.png" alt="添加GND网络标号"></p>
<p>然后点击顶部导航栏的放置多边形平面：</p>
<p><img src="https://i.loli.net/2021/04/28/6CfG1lsMqIDO7xc.png" alt="放置多边形平面"></p>
<p>直接点击确定后，依次点击板子四个边角，将板子整个框选起来：</p>
<p><img src="https://i.loli.net/2021/04/28/UYzLE6XGjeA9qsd.png" alt="PCB铺完铜"></p>
<h2 id="5-3D预览"><a href="#5-3D预览" class="headerlink" title="5 3D预览"></a>5 3D预览</h2><p>按<code>3</code>看一下<code>3D</code>预览效果：</p>
<p><img src="https://i.loli.net/2021/04/28/AolkVOJEQ5rLvDi.png" alt="PCB的3D预览"></p>
<h2 id="6-打印设置"><a href="#6-打印设置" class="headerlink" title="6 打印设置"></a>6 打印设置</h2><p>在顶部导航栏选择文件，页面设置，缩放模式选择<code>Scaled Print</code>，缩放比例为<code>1.00</code>：</p>
<p><img src="https://i.loli.net/2021/04/28/JoAak14q2XIrMbn.png" alt="页面设置"></p>
<p>然后点击高级，进入页面高级设置：</p>
<p><img src="https://i.loli.net/2021/04/28/VvYs1LwEnlPpI3f.png" alt="页面高级设置"></p>
<p>在这里可以删掉多余的层，只保留需要的，如果有焊盘，则需要勾选孔，由于我们绘制的矩阵键盘都是插件，所以无需勾选镜像，如果是有顶层贴片元件，则需要勾选镜像。</p>
<p><img src="https://i.loli.net/2021/04/28/lwsJa94uCDR861Y.png" alt="完成页面高级设置"></p>
<p>点击顶部导航栏的生成当前文件的打印预览：</p>
<p><img src="https://i.loli.net/2021/04/28/TCtPavL6XH9MdnD.png" alt="打印预览"></p>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>技术</tag>
        <tag>AltiumDesigner</tag>
        <tag>PCB</tag>
      </tags>
  </entry>
  <entry>
    <title>Anaconda下安装opencv</title>
    <url>/2020/03/29/Anaconda%E4%B8%8B%E5%AE%89%E8%A3%85opencv/</url>
    <content><![CDATA[<h1 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h1><h2 id="1-安装Anaconda并设置环境变量"><a href="#1-安装Anaconda并设置环境变量" class="headerlink" title="1.安装Anaconda并设置环境变量"></a>1.安装Anaconda并设置环境变量</h2><p>计算机-&gt;属性-&gt;高级-&gt;环境变量-&gt;Path</p>
<p>新建Anaconda安装路径</p>
<p>我的是：<code>D:\ProgramData\Anaconda3\Scripts</code></p>
<h2 id="2-下载opencv文件"><a href="#2-下载opencv文件" class="headerlink" title="2.下载opencv文件"></a>2.下载opencv文件</h2><p><a href="https://www.lfd.uci.edu/~gohlke/pythonlibs/">点我下载</a></p>
<p>下载与当前环境兼容的<code>opencv</code>文件（<code>cp37</code>对应<code>python3.7</code>）</p>
<p>如<code>opencv_python-4.2.0-cp37-cp37m-win_amd64.whl</code></p>
<p>下载后进入对应目录，在命令行下输入</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pip install opencv_python-4.2.0-cp37-cp37m-win_amd64.whl</span><br></pre></td></tr></table></figure>

<p>遇到如下问题</p>
<p><img src="https://i.loli.net/2020/02/26/bFIkV72TXKwZH6a.png" alt="image-20200225234947762.png"></p>
<p><a href="https://slproweb.com/products/Win32OpenSSL.html">点我下载winopenssl</a></p>
<p>下载第一个MSI安装即可</p>
<h2 id="3-再次进入命令行输入命令"><a href="#3-再次进入命令行输入命令" class="headerlink" title="3.再次进入命令行输入命令"></a>3.再次进入命令行输入命令</h2><p><img src="https://i.loli.net/2020/02/26/8kdh7YQUlROzbTt.png" alt="image-20200225234900049.png"></p>
<h1 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h1><p>拷贝<code>cv2.pyd</code>文件将OpenCV路径下的此文件<code>\opencv\build\python\cv2\python-3.76</code> 的 <code>.pyd</code>拷贝到:<code>\Anaconda\Lib\site-packages</code></p>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>技术</tag>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>Git使用教程</title>
    <url>/2020/04/12/Git%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/</url>
    <content><![CDATA[<h2 id="1-介绍"><a href="#1-介绍" class="headerlink" title="1 介绍"></a>1 介绍</h2><p>本教程简单介绍了<code>GitGUI</code>、<code>GitBash</code>、<code>TortoiseGit</code>使用<code>HTTP</code>方式克隆/推送版本库以及<code>SSH</code>添加密钥的方法。<br>本教程使用<code>Markdown</code>编辑器<a href="https://www.typora.io/">Typora</a>编写。</p>
<h2 id="2-基本概念"><a href="#2-基本概念" class="headerlink" title="2 基本概念"></a>2 基本概念</h2><ol>
<li>工作区<br>电脑里能看到的目录。</li>
<li>暂存区<br>存放于隐藏文件夹<code>.git</code>中的<code>index</code>文件，也叫作索引区。</li>
<li>版本库<br>隐藏文件夹<code>.git</code>，<code>.git</code>不属于工作区，而是<code>Git</code>的版本库。<br><img src="https://i.loli.net/2021/04/26/VQ5Il3zE4cfg2J6.png" alt="基本概念图"></li>
</ol>
<h2 id="3-分布式工作流程"><a href="#3-分布式工作流程" class="headerlink" title="3 分布式工作流程"></a>3 分布式工作流程</h2><h3 id="3-1-集成管理者工作流"><a href="#3-1-集成管理者工作流" class="headerlink" title="3.1 集成管理者工作流"></a>3.1 集成管理者工作流</h3><p>有一个主仓库和若干个公开仓库，每个开发者需要先从主仓库克隆出自己的公开仓库，然后将自己的修改推送上去，然后可以请求主仓库的管理者拉取更新并合并到主仓库，流程如下：</p>
<ol>
<li>开发者派生主仓库，此时开发者有自己的远程仓库。</li>
<li>克隆自己的仓库到本地，做出修改并推送。</li>
<li>请求拉取自己的更新。</li>
<li>管理者在自己的本地仓库中，将开发者仓库加为远程仓库并合并修改。</li>
<li>管理者将合并后的修改推送到主仓库。</li>
</ol>
<h3 id="3-2-分支开发工作流"><a href="#3-2-分支开发工作流" class="headerlink" title="3.2 分支开发工作流"></a>3.2 分支开发工作流</h3><p>只有一个中心仓库，但是有很多分支。只在主分支上保留完全稳定的代码，还可以有一些类似develop或者next的平行分支，可以用来做后续开发或者测试功能稳定性，等这些分支一旦达到稳定状态，就可以合并到主分支了。</p>
<h4 id="3-2-1-创建与合并分支的概念"><a href="#3-2-1-创建与合并分支的概念" class="headerlink" title="3.2.1 创建与合并分支的概念"></a>3.2.1 创建与合并分支的概念</h4><p>在<code>Git</code>中，你的每一次提交都被<code>Git</code>串成一条时间线，一般来说，这条时间线就是主分支<code>master</code>，<code>Git</code>用<code>HEAD</code>指向你当前工作在哪个分支，再用<code>master</code>指向你的当前提交版本，这样就可以确定你的当前分支以及当前分支的提交版本，每次提交<code>master</code>就会向前移动，指向当前提交版本。<br><img src="https://i.loli.net/2021/04/26/GcumqIbF1wiQjPs.png" alt="master与HEAD"><br>当创建一个新分支<code>dev</code>时，其实是新建了一个<code>dev</code>指针，指向<code>master</code>相同的提交，要切换到<code>dev</code>分支就只需要将<code>HEAD</code>指针指向<code>dev</code>就行。<br><img src="https://i.loli.net/2021/04/26/nRvMIa1KcQxp3gu.png" alt="dev指针"><br>从现在起，你对工作区的修改和提交都是针对<code>dev</code>分支，每次提交，都是由<code>dev</code>指针向前移动，指向当前的提交版本。<br><img src="https://i.loli.net/2021/04/26/SedP2Z9C6XwQ5Lm.png" alt="dev提交"><br>如果要合并，只需要将<code>master</code>指向<code>dev</code>的当前提交版本就可以了，合并完可以删除<code>dev</code>指针，这样就只剩一条主分支。<br><img src="https://i.loli.net/2021/04/26/sr6AtMvUQlPg2Rk.png" alt="dev合并"><br>当<code>Git</code>无法自动合并分支时，会提示冲突，此时必须首先解决冲突，将合并失败的文件内容编辑为希望的内容，然后再提交，最后合并完成。</p>
<h2 id="4-使用方法"><a href="#4-使用方法" class="headerlink" title="4 使用方法"></a>4 使用方法</h2><h3 id="4-1-Git-Bash"><a href="#4-1-Git-Bash" class="headerlink" title="4.1 Git Bash"></a>4.1 Git Bash</h3><p><code>Git Bash</code>是通过命令行终端进行项目开发，<code>GitGUI</code>和<code>TortoiseGit</code>的本质就是用图形化界面对这些命令进行了封装，有些时候还是得通过命令行的方式进行操作。</p>
<h4 id="4-1-1-命令清单"><a href="#4-1-1-命令清单" class="headerlink" title="4.1.1 命令清单"></a>4.1.1 命令清单</h4><p>一般来说，日常使用只需要以下6个命令：<br><img src="https://i.loli.net/2021/04/26/tnX3lc2zh5WgdYq.png" alt="日常命令"></p>
<ol>
<li>新建版本库<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 在当前目录下新建一个Git版本库</span></span><br><span class="line">git init</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将指定目录其初始化为Git版本库</span></span><br><span class="line">git init [project_directory]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 克隆一个Git版本库</span></span><br><span class="line">git <span class="built_in">clone</span> [url]</span><br></pre></td></tr></table></figure></li>
<li>Git配置<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查看当前Git配置信息</span></span><br><span class="line">git config -l</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置Git用户信息</span></span><br><span class="line">git config --global user.email <span class="string">&quot;E-mail_Address&quot;</span></span><br><span class="line">git config --global user.name  <span class="string">&quot;User_Name&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 忽略特殊文件，需要编写.gitnore文件，并放入版本库</span></span><br><span class="line"><span class="comment"># 忽略原则</span></span><br><span class="line"><span class="comment"># 1.忽略操作系统自动生成的文件，比如缩略图</span></span><br><span class="line"><span class="comment"># 2.忽略编译产生的中间文件、可执行文件等</span></span><br><span class="line"><span class="comment"># 3.忽略存放有敏感信息的个人配置文件</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查gitnore配置文件的问题</span></span><br><span class="line">git check-ignore</span><br></pre></td></tr></table></figure>
<a href="https://github.com/github/gitignore">点我浏览gitnore配置文件</a></li>
<li>增删文件<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 将指定文件添加到暂存区</span></span><br><span class="line">git add [file1] [file2] ...</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将指定目录添加到暂存区，包括子目录</span></span><br><span class="line">git add [directory]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将当前目录下所有文件添加到暂存区</span></span><br><span class="line">git add .</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除工作区文件，并将此次删除放入暂存区</span></span><br><span class="line">git rm [file1] [file2] ...</span><br></pre></td></tr></table></figure></li>
<li>提交代码<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 提交暂存区到版本库</span></span><br><span class="line">git commit -m [commit_message]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 提交暂存区的指定文件到暂存区</span></span><br><span class="line">git commit [file1] [file2] ... -m [commit_message]</span><br></pre></td></tr></table></figure></li>
<li>分支<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查看所有本地分支</span></span><br><span class="line">git branch</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看所有远程分支</span></span><br><span class="line">git branch -r</span><br><span class="line"></span><br><span class="line"><span class="comment"># 新建一个分支，但仍处于当前分支</span></span><br><span class="line">git branch [branch_name]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 新建分支并切换到新分支</span></span><br><span class="line">git checkout -b [branch_name]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 切换到指定分支</span></span><br><span class="line">git checkout [branch_name]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除指定分支(使用-D来强制删除一个未被合并的分支)</span></span><br><span class="line">git branch -d [branch_name]</span><br></pre></td></tr></table></figure></li>
<li>标签<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查看所有标签</span></span><br><span class="line">git tag</span><br><span class="line"></span><br><span class="line"><span class="comment"># 为当前提交的版本创建标签</span></span><br><span class="line">git tag [tag_name]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 为指定版本创建标签</span></span><br><span class="line">git tag [tag_name] [commit_id]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 为指定版本创建带有说明的标签</span></span><br><span class="line">git tag -a [tag_name] -m <span class="string">&quot;tag_description&quot;</span> [commit_id]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 推送本地标签到远程</span></span><br><span class="line">git push [remote_name] [tag_name]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 推送所有未推送的本地标签</span></span><br><span class="line">git push [remote_name] --tags</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除一个指定的远程标签</span></span><br><span class="line">git push [remote_name] :refs/tags/[tag_name]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除本地标签</span></span><br><span class="line">git tag -d [tag_name]</span><br></pre></td></tr></table></figure></li>
<li>查看信息<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查看所有变更文件</span></span><br><span class="line">git status</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看当前分支的版本历史</span></span><br><span class="line">git <span class="built_in">log</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看命令历史</span></span><br><span class="line">git reflog</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看暂存区和工作区差异</span></span><br><span class="line">git diff</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看任意两个版本之间的改动</span></span><br><span class="line">git diff [commit_id1] [commit_id2]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看任意两个版本的src文件夹的差异</span></span><br><span class="line">git diff [commit_id1] [commit_id2] src</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看远程仓库信息，显示可以拉取和推送的地址，如果没有推送权限就看不到推送地址</span></span><br><span class="line">git remote -v</span><br></pre></td></tr></table></figure></li>
<li>远程同步<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 关联一个远程仓库</span></span><br><span class="line">git remote add [remote_name] [url]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 下载远程仓库所有变动(到版本库)，可以先查看远程仓库的变动再选择是否合并到本地</span></span><br><span class="line">git fetch [remote_name]</span><br><span class="line">git <span class="built_in">log</span> -p FETCH_HEAD</span><br><span class="line">git merge [remote_name]/master</span><br><span class="line"></span><br><span class="line"><span class="comment"># 拉取指定远程分支的变化并与指定的本地分支合并(不推荐)</span></span><br><span class="line">git pull [remote_name] [remote_branch]:[local_branch]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 推送本地指定分支到远程仓库</span></span><br><span class="line">git push [remote_name] [branch_name]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 强行推送当前分支到远程仓库，即使有冲突</span></span><br><span class="line">git push [remote_name] -f</span><br></pre></td></tr></table></figure></li>
<li>撤销<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 丢弃工作区文件的修改(文件还未添加到暂存区)</span></span><br><span class="line">git checkout -- [file]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 丢弃工作区文件的修改(文件已添加到暂存区)，先撤销暂存区的修改再丢弃</span></span><br><span class="line">git reset HEAD [file]</span><br><span class="line">git checkout -- [file]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重置暂存区的指定文件，与上一次提交保持一致，但工作区不变</span></span><br><span class="line">git reset [file]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重置暂存区和工作区，与上一次提交保持一致</span></span><br><span class="line">git reset --hard</span><br><span class="line"></span><br><span class="line"><span class="comment"># 回退到指定版本</span></span><br><span class="line">git reset --hard [commit_id]</span><br></pre></td></tr></table></figure></li>
<li>发布版本<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 将master分支最新节点打包</span></span><br><span class="line">git archive --format zip --output [release_name].zip master</span><br></pre></td></tr></table></figure></li>
</ol>
<h3 id="4-2-Git-GUI"><a href="#4-2-Git-GUI" class="headerlink" title="4.2 Git GUI"></a>4.2 Git GUI</h3><p>安装<code>Windows</code>版本的<code>Git</code>时，会默认安装一个简单的<code>GUI</code>工具，提供图形化界面。</p>
<h4 id="4-2-1-Git-GUI汉化"><a href="#4-2-1-Git-GUI汉化" class="headerlink" title="4.2.1 Git GUI汉化"></a>4.2.1 Git GUI汉化</h4><p><a href="https://github.com/stayor/git-gui-zh.git">GitGui汉化项目</a><br>将汉化文件拷贝到<code>Git</code>安装目录下的<code>\mingw64\share\git-gui\lib\msgs</code>，<code>lib</code>下没有<code>msgs</code>文件夹则需要新建一个。<br>汉化后的<code>GUI</code>界面如下所示：<br><img src="https://i.loli.net/2021/04/26/5KvJwNIGPmongdh.png" alt="GitGui汉化界面1"><br><img src="https://i.loli.net/2021/04/26/QcsAFSB3ifxHaGl.png" alt="GitGui汉化界面2"></p>
<h4 id="4-2-2-Git-GUI配置"><a href="#4-2-2-Git-GUI配置" class="headerlink" title="4.2.2 Git GUI配置"></a>4.2.2 Git GUI配置</h4><p>点击编辑，选项，更改文件内容编码为<code>UTF-8</code>：<br><img src="https://i.loli.net/2021/04/26/fqDVCPNwF2Abeph.png" alt="编辑GitGui"></p>
<h4 id="4-2-3-Git-GUI使用"><a href="#4-2-3-Git-GUI使用" class="headerlink" title="4.2.3 Git GUI使用"></a>4.2.3 Git GUI使用</h4><h5 id="4-2-3-1-克隆已有的远程仓库"><a href="#4-2-3-1-克隆已有的远程仓库" class="headerlink" title="4.2.3.1 克隆已有的远程仓库"></a>4.2.3.1 克隆已有的远程仓库</h5><ol>
<li>单击右键<code>Git GUI Here</code>，克隆一个已有的远程仓库<br><img src="https://i.loli.net/2021/04/26/j2oZTFngAHLqsGE.png" alt="克隆已有版本库"></li>
<li>缓存改动到暂存区，然后提交到版本库<br><img src="https://i.loli.net/2021/04/26/48EWr3spbuC7gSR.png" alt="未缓存改动"><br><img src="https://i.loli.net/2021/04/26/IkVtFc38QLziqyh.png" alt="缓存改动"><br><img src="https://i.loli.net/2021/04/26/7MBJmOIPA5SiulW.png" alt="提交修改"></li>
<li>上传到远程仓库(默认是<code>origin</code>)<br><img src="https://i.loli.net/2021/04/26/elkWSd4DOb9cEhZ.png" alt="上传到远程仓库"></li>
<li>从远程仓库获取变动<br><img src="https://i.loli.net/2021/04/26/A5c4QbgVhFlR78I.png" alt="获取远程变动"></li>
<li>本地合并变动<br><img src="https://i.loli.net/2021/04/26/kIKZhJYzOloNMF8.png" alt="本地合并"><br><img src="https://i.loli.net/2021/04/26/cHdDa2mhqvkUuV7.png" alt="本地合并成功"></li>
</ol>
<h5 id="4-2-3-2-本地上传新的版本库"><a href="#4-2-3-2-本地上传新的版本库" class="headerlink" title="4.2.3.2 本地上传新的版本库"></a>4.2.3.2 本地上传新的版本库</h5><ol>
<li>创建新的版本库<br><img src="https://i.loli.net/2021/04/26/PeDA1C4Nls3t7Sf.png" alt="创建新的版本库"></li>
<li>上传本地版本库(可填写地址直接上传，无需去远程创建)<br>HTTP:<code>http://192.168.3.179/[User_Name]/[Project_Name].git</code><br>SSH:<code>git@192.168.3.179:[User_Name]/[Project_Name].git</code><br><img src="https://i.loli.net/2021/04/26/6FsYQrqBoXGTb3v.png" alt="直接上传本地版本库"></li>
</ol>
<h3 id="4-3-TortoiseGit"><a href="#4-3-TortoiseGit" class="headerlink" title="4.3 TortoiseGit"></a>4.3 TortoiseGit</h3><h4 id="4-3-1-HTTP方式克隆-推送版本库"><a href="#4-3-1-HTTP方式克隆-推送版本库" class="headerlink" title="4.3.1 HTTP方式克隆/推送版本库"></a>4.3.1 HTTP方式克隆/推送版本库</h4><h5 id="4-3-1-1-GitLab及TortoiseGit配置说明"><a href="#4-3-1-1-GitLab及TortoiseGit配置说明" class="headerlink" title="4.3.1.1 GitLab及TortoiseGit配置说明"></a>4.3.1.1 GitLab及TortoiseGit配置说明</h5><ol>
<li>GitLab设置中文<br>点击<code>settings</code>：<br><img src="https://i.loli.net/2021/04/26/DhE7MlnGy6VQ5Uj.png" alt="setting"><br>选择<code>preference</code>：<br><img src="https://i.loli.net/2021/04/26/CZMasfR4bwBgSuq.png" alt="preference"><br>找到<code>Localization</code>并修改<code>Language</code>为简体中文：<br><img src="https://i.loli.net/2021/04/26/emuz63WFXGIZdLl.png" alt="localization"></li>
<li>TortoiseGit设置<br>项目文件夹里单击右键选择<code>TortoiseGit(T)</code> –&gt; <code>设置</code><br><img src="https://i.loli.net/2021/04/26/7axLu8fB6l915oO.png" alt="Git设置"><br>点击编辑全局<code>.git/config</code>，配置自己的信息，加入：<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[credential]</span><br><span class="line">	helper = store</span><br></pre></td></tr></table></figure>
这是为了记住用户名和密码：<br><img src="https://i.loli.net/2021/04/26/xFMrjaEJqDSlQY4.png" alt="Git全局配置"></li>
</ol>
<h5 id="4-3-1-2-创建本地版本库"><a href="#4-3-1-2-创建本地版本库" class="headerlink" title="4.3.1.2 创建本地版本库"></a>4.3.1.2 创建本地版本库</h5><ol>
<li>新建项目文件夹<br><img src="https://i.loli.net/2021/04/26/GpUmEDeICg2zTfZ.png" alt="项目文件夹"></li>
<li>在项目文件夹里单击右键选择<code>Git在这里创建版本库</code><br><img src="https://i.loli.net/2021/04/26/7AQqspx2kK85IMX.png" alt="创建版本库"></li>
</ol>
<h5 id="4-3-1-3-创建远程仓库"><a href="#4-3-1-3-创建远程仓库" class="headerlink" title="4.3.1.3 创建远程仓库"></a>4.3.1.3 创建远程仓库</h5><p><img src="https://i.loli.net/2021/04/26/B2qrHydJnigzSY8.png" alt="创建远程仓库"></p>
<h5 id="4-3-1-4-绑定远程仓库并提交"><a href="#4-3-1-4-绑定远程仓库并提交" class="headerlink" title="4.3.1.4 绑定远程仓库并提交"></a>4.3.1.4 绑定远程仓库并提交</h5><ol>
<li>克隆仓库地址(使用<code>HTTP</code>克隆)<br><img src="https://i.loli.net/2021/04/26/mLay7qDvbknHXrT.png" alt="克隆仓库地址"></li>
<li>单击右键选择<code>Git提交</code><br>(1) 填写日志信息，描述项目文件改动。<br>(2) 勾选未受版本控制的文件，即未提交的文件。<br><img src="https://i.loli.net/2021/04/26/dlZab19yTUVHmBO.png" alt="提交"><br><img src="https://i.loli.net/2021/04/27/HgxBhywA2XTUVbe.png" alt="提交成功"></li>
<li>点击推送(<code>URL</code>为克隆的仓库地址)<br><img src="https://i.loli.net/2021/04/26/jv9TRHxd7wDIhnZ.png" alt="推送"><br><img src="https://i.loli.net/2021/04/26/VpAKINCqF95l6wh.png" alt="推送成功"></li>
</ol>
<h5 id="4-3-1-5-新建分支与合并"><a href="#4-3-1-5-新建分支与合并" class="headerlink" title="4.3.1.5 新建分支与合并"></a>4.3.1.5 新建分支与合并</h5><p>新建一个分支相当于新建了一份备份，比如要添加新功能时，可以在新建的分支里进行测试，测试成功后再合并到主分支，新分支的修改不影响主分支。</p>
<ol>
<li>创建分支并切换到新分支<br><img src="https://i.loli.net/2021/04/26/mIblKvr18XaywqW.png" alt="创建分支"></li>
<li>创建<code>newFunction.txt</code>文件用于测试修改<br><img src="https://i.loli.net/2021/04/26/tSPTF5ixmjoYA9h.png" alt="新功能测试文件"></li>
<li>提交修改并推送到新分支<code>v1.0.0</code><br><img src="https://i.loli.net/2021/04/26/JZAemwHnDR34F8G.png" alt="提交到新分支"><br>查看远端仓库可以发现，主分支没有变化，但是有新的分支可以合并：<br><img src="https://i.loli.net/2021/04/26/lPrbsS9E1tThqxi.png" alt="查看远端合并请求"></li>
</ol>
<div class="note warning flat"><p><strong>注意：</strong><br>合并新分支到主分支，一般是由项目管理者去合并分支，项目开发者克隆原始版本到本地后，可以新建分支进行开发测试，测试无误后可将此分支提交到远程仓库，由管理者审核后可合并到项目主分支。</p>
</div>

<h4 id="4-3-2-SSH添加密钥"><a href="#4-3-2-SSH添加密钥" class="headerlink" title="4.3.2 SSH添加密钥"></a>4.3.2 SSH添加密钥</h4><p>只有添加了密钥才能使用<code>SSH URL</code>克隆仓库。</p>
<h5 id="4-3-2-1-检查本机已存在的SSH密钥"><a href="#4-3-2-1-检查本机已存在的SSH密钥" class="headerlink" title="4.3.2.1 检查本机已存在的SSH密钥"></a>4.3.2.1 检查本机已存在的<code>SSH</code>密钥</h5><p>右键单击<code>git bash here</code>，输入<code>cd ~/.ssh</code><br>提示<code>No such file or directory</code>说明是第一次使用。</p>
<h5 id="4-3-2-2-创建SSH密钥"><a href="#4-3-2-2-创建SSH密钥" class="headerlink" title="4.3.2.2 创建SSH密钥"></a>4.3.2.2 创建<code>SSH</code>密钥</h5><p><code>ssh-keygen -t rsa -C &quot;e-mail address&quot;</code><br>持续三次回车，<code>id_rsa</code>是私钥，<code>id_rsa.pub</code>是公钥。<br><img src="https://i.loli.net/2021/04/26/F5r3sk2RvZUf1jY.png" alt="创建SSH密钥"></p>
<h5 id="4-3-2-3-添加SSH密钥"><a href="#4-3-2-3-添加SSH密钥" class="headerlink" title="4.3.2.3 添加SSH密钥"></a>4.3.2.3 添加<code>SSH</code>密钥</h5><p>复制<code>id_rsa.pub</code>内容粘贴到密钥文本框：<br><img src="https://i.loli.net/2021/04/26/g5WvBNEmxGMysib.png" alt="添加密钥"></p>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>技术</tag>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo介绍</title>
    <url>/2020/02/23/Hexo%E4%BB%8B%E7%BB%8D/</url>
    <content><![CDATA[<h2 id="1-Hexo是什么？"><a href="#1-Hexo是什么？" class="headerlink" title="1 Hexo是什么？"></a>1 Hexo是什么？</h2><p><a href="https://hexo.io/">Hexo</a> 是一个快速、简洁且高效的博客框架。Hexo 使用 <code>Markdown</code>（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p>
<h2 id="2-如何使用Hexo？"><a href="#2-如何使用Hexo？" class="headerlink" title="2 如何使用Hexo？"></a>2 如何使用Hexo？</h2><h3 id="2-1-安装"><a href="#2-1-安装" class="headerlink" title="2.1 安装"></a>2.1 安装</h3><h4 id="2-1-1-安装前提"><a href="#2-1-1-安装前提" class="headerlink" title="2.1.1 安装前提"></a>2.1.1 安装前提</h4><p>在安装Hexo前，需要确保你已安装<a href="http://git-scm.com/">Git</a>和<a href="https://nodejs.org/zh-cn/download/">Node.js</a>。</p>
<h4 id="2-1-2-安装Git"><a href="#2-1-2-安装Git" class="headerlink" title="2.1.2 安装Git"></a>2.1.2 安装Git</h4><div class="tabs" id=""><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#-1">Windows安装Git</button></li><li class="tab"><button type="button" data-href="#-2">Mac安装Git</button></li><li class="tab"><button type="button" data-href="#-3">Linux(Ubuntu, Debian)安装Git</button></li><li class="tab"><button type="button" data-href="#-4">Linux(Fedora, Red Hat, CentOS)安装Git</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="-1"><p>下载并安装<a href="https://git-scm.com/download/win">Git</a></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="-2"><p>使用 <a href="http://mxcl.github.com/homebrew/">Homebrew</a>, <a href="http://www.macports.org/">MacPorts</a> 或者下载 <a href="http://sourceforge.net/projects/git-osx-installer/">安装程序</a></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="-3"><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get install git-core</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="-4"><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo yum install git-core</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>

<h4 id="2-1-3-安装Node-js"><a href="#2-1-3-安装Node-js" class="headerlink" title="2.1.3 安装Node.js"></a>2.1.3 安装Node.js</h4><div class="tabs" id=""><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#-1">Windows安装Node.js</button></li><li class="tab"><button type="button" data-href="#-2">Mac安装Node.js</button></li><li class="tab"><button type="button" data-href="#-3">Linux(DEB/RPM-based)安装Node.js</button></li><li class="tab"><button type="button" data-href="#-4">其他方式安装Node.js</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="-1"><p>通过 <a href="https://github.com/jasongin/nvs/">nvs</a> 或者<a href="https://github.com/nvm-sh/nvm">nvm</a> 安装。</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="-2"><p>使用 <a href="http://mxcl.github.com/homebrew/">Homebrew</a>, <a href="http://www.macports.org/">MacPorts</a> 安装。</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="-3"><p>从 <a href="https://github.com/nodesource/distributions">NodeSource</a> 安装。</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="-4"><p>使用相应的软件包管理器进行安装，可以参考 Node.js的<a href="https://nodejs.org/zh-cn/download/package-manager/">下载指导</a></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>

<h4 id="2-1-4-安装Hexo"><a href="#2-1-4-安装Hexo" class="headerlink" title="2.1.4 安装Hexo"></a>2.1.4 安装Hexo</h4><p>完成安装前提后，即可使用npm来安装Hexo。</p>
<p>鼠标右键单击选择Git Bash，打开终端，输入以下命令进行安装：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>

<p>安装完成后，输入以下命令检查安装是否成功：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo -v</span><br></pre></td></tr></table></figure>

<p>成功后则会显示具体版本号，大致如下所示：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">lyl@lyl-PC MINGW64 ~/Desktop </span><br><span class="line">$ hexo -v</span><br><span class="line">hexo-cli: 4.2.0</span><br><span class="line">os: Windows_NT 6.1.7601 win32 x64</span><br><span class="line">node: 12.16.2</span><br><span class="line">v8: 7.8.279.23-node.34</span><br><span class="line">uv: 1.34.2</span><br><span class="line">zlib: 1.2.11</span><br><span class="line">brotli: 1.0.7</span><br><span class="line">ares: 1.15.0</span><br><span class="line">modules: 72</span><br><span class="line">nghttp2: 1.40.0</span><br><span class="line">napi: 5</span><br><span class="line">llhttp: 2.0.4</span><br><span class="line">http_parser: 2.9.3</span><br><span class="line">openssl: 1.1.1e</span><br><span class="line">cldr: 36.0</span><br><span class="line">icu: 65.1</span><br><span class="line">tz: 2019c</span><br><span class="line">unicode: 12.1</span><br></pre></td></tr></table></figure>

<h4 id="2-1-5-Node-js版本限制"><a href="#2-1-5-Node-js版本限制" class="headerlink" title="2.1.5 Node.js版本限制"></a>2.1.5 Node.js版本限制</h4><p>Node.js 版本需不低于 10.13，建议使用 Node.js 12.0 及以上版本。</p>
<table>
<thead>
<tr>
<th align="left">Hexo 版本</th>
<th align="left">最低兼容 Node.js 版本</th>
</tr>
</thead>
<tbody><tr>
<td align="left">5.0+</td>
<td align="left">10.13.0</td>
</tr>
<tr>
<td align="left">4.1 - 4.2</td>
<td align="left">8.10</td>
</tr>
<tr>
<td align="left">4.0</td>
<td align="left">8.6</td>
</tr>
<tr>
<td align="left">3.3 - 3.9</td>
<td align="left">6.9</td>
</tr>
<tr>
<td align="left">3.2 - 3.3</td>
<td align="left">0.12</td>
</tr>
<tr>
<td align="left">3.0 - 3.1</td>
<td align="left">0.10 or iojs</td>
</tr>
<tr>
<td align="left">0.0.1 - 2.8</td>
<td align="left">0.10</td>
</tr>
</tbody></table>
<h3 id="2-2-建站"><a href="#2-2-建站" class="headerlink" title="2.2 建站"></a>2.2 建站</h3><h4 id="2-2-1-初始化"><a href="#2-2-1-初始化" class="headerlink" title="2.2.1 初始化"></a>2.2.1 初始化</h4><p>首先创建一个文件夹<code>HexoBlog</code>，用于存放所有建站的相关文件：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mkdir HexoBlog</span><br></pre></td></tr></table></figure>

<p>然后在终端输入如下命令进行初始化：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo init HexoBlog</span><br></pre></td></tr></table></figure>

<p>初始化完成后，提示信息如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">lyl@lyl-PC MINGW64 /e/MyData </span><br><span class="line">$ hexo init HexoBlog</span><br><span class="line">INFO  Cloning hexo-starter https://github.com/hexojs/hexo-starter.git</span><br><span class="line">INFO  Install dependencies</span><br><span class="line">added 190 packages from 160 contributors and audited 196 packages <span class="keyword">in</span> 53.858s</span><br><span class="line"></span><br><span class="line">15 packages are looking <span class="keyword">for</span> funding</span><br><span class="line">  run `npm fund` <span class="keyword">for</span> details</span><br><span class="line"></span><br><span class="line">found 0 vulnerabilities</span><br><span class="line"></span><br><span class="line">INFO  Start blogging with Hexo!</span><br></pre></td></tr></table></figure>

<p><code>HexoBlog</code>文件夹目录结构如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">.</span><br><span class="line">├── node_modules</span><br><span class="line">├── scaffolds</span><br><span class="line">|   ├── draft</span><br><span class="line">|   └── page</span><br><span class="line">|   └── post</span><br><span class="line">├── <span class="built_in">source</span></span><br><span class="line">|   ├── hello-world.md</span><br><span class="line">└── themes</span><br><span class="line">└── .gitignore</span><br><span class="line">├── _config.landscape.yml</span><br><span class="line">├── _config.yml</span><br><span class="line">├── package.json</span><br><span class="line">├── package-lock.json</span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th align="left">文件/文件夹</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>node_modules</code></td>
<td align="left">模块文件夹，存放下载的模块。</td>
</tr>
<tr>
<td align="left"><code>scaffolds</code></td>
<td align="left">模板文件夹，Hexo根据模板来新建文章或页面。</td>
</tr>
<tr>
<td align="left"><code>source</code></td>
<td align="left">资源文件夹，存放用户资源。除<code>_posts</code>文件夹之外，开头命名为 <code>_ (下划线)的文件 / 文件夹</code>和隐藏的文件将会被忽略。</td>
</tr>
<tr>
<td align="left"><code>themes</code></td>
<td align="left">主题文件夹，Hexo根据主题生成静态页面。</td>
</tr>
<tr>
<td align="left"><code>.gitignore</code></td>
<td align="left">忽略文件模板，被忽略的文件不会进入版本控制。</td>
</tr>
<tr>
<td align="left"><code>_config.landscape.yml</code></td>
<td align="left">默认的主题配置信息</td>
</tr>
<tr>
<td align="left"><code>_config.yml</code></td>
<td align="left">网站的配置信息</td>
</tr>
<tr>
<td align="left"><code>package.json</code></td>
<td align="left">应用程序的信息。<code>EJS</code>, <code>Stylus</code>和<code>Markdown renderer</code>已默认安装，可自由移除。</td>
</tr>
<tr>
<td align="left"><code>package.json</code></td>
<td align="left">应用程序的信息，锁定安装时的包的版本号，保证其他人在npm install时，依赖能保证一致。</td>
</tr>
</tbody></table>
<h4 id="2-2-2-命令"><a href="#2-2-2-命令" class="headerlink" title="2.2.2 命令"></a>2.2.2 命令</h4><ol>
<li>init(初始化)<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 初始化一个名为FOLDER_NAME文件夹</span></span><br><span class="line">hexo init FOLDER_NAME</span><br></pre></td></tr></table></figure></li>
<li>new(新建)<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 新建一篇名为POST_NAME的文章</span></span><br><span class="line">hexo new POST_NAME</span><br><span class="line"></span><br><span class="line"><span class="comment"># 新建一个title为About me的页面并指定路径</span></span><br><span class="line"><span class="comment"># 此时会在`source/about`下创建一个`me.md`文件</span></span><br><span class="line">hexo new page --path about/me <span class="string">&quot;About me&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 新建一个名为about的独立页面</span></span><br><span class="line">hexo new page about</span><br></pre></td></tr></table></figure></li>
<li>generate(编译生成)<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 编译生成</span></span><br><span class="line">hexo generate</span><br><span class="line"><span class="comment"># 简写</span></span><br><span class="line">hexo g</span><br></pre></td></tr></table></figure></li>
<li>server(启动预览)<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 启动预览</span></span><br><span class="line">hexo server</span><br><span class="line"><span class="comment"># 简写</span></span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure></li>
<li>deploy(部署)<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 部署</span></span><br><span class="line">hexo deploy</span><br><span class="line"><span class="comment"># 简写</span></span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure></li>
<li>clean(清除缓存)<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 清除缓存</span></span><br><span class="line">hexo clean</span><br></pre></td></tr></table></figure></li>
</ol>
<h4 id="2-2-3-预览"><a href="#2-2-3-预览" class="headerlink" title="2.2.3 预览"></a>2.2.3 预览</h4><p>初始化完成后，就可以进行编译、预览来查看网站的效果了。</p>
<p>终端输入如下命令进行编译、预览：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 进入HexoBlog</span></span><br><span class="line"><span class="built_in">cd</span> HexoBlog</span><br><span class="line"><span class="comment"># 编译并生成预览</span></span><br><span class="line">hexo s -g</span><br></pre></td></tr></table></figure>

<p>浏览器输入<code>http://localhost:4000</code>查看效果：</p>
<p><img src="https://i.loli.net/2021/04/22/kUVxGXuBYgFZejm.png" alt="Hexo预览.png"></p>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>技术</tag>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>MQTT介绍</title>
    <url>/2021/04/01/MQTT%E4%BB%8B%E7%BB%8D/</url>
    <content><![CDATA[<h2 id="1-MQTT定义"><a href="#1-MQTT定义" class="headerlink" title="1 MQTT定义"></a>1 MQTT定义</h2><p>MQTT（Message Queuing Telemetry Transport，消息队列遥测传输协议），是一个基于<strong>发布/订阅式</strong>的通讯协议。它的固定头部只有2字节，开销很小，具有轻量、简单、开放和易于实现的特点，这些特点使得它应用广泛，它的最大优点是，只需占用极少的带宽即可为远程设备的连接提供可靠的实时消息服务，用户还可以使用预留标志位，按照自己的系统需求进行扩展。</p>
<p>下面是一个简单的MQTT系统模型：</p>
<p><img src="https://i.loli.net/2021/03/31/AUdtpuG5LBVJDFk.png" alt="MQTT系统模型.png"></p>
<h2 id="2-MQTT原理"><a href="#2-MQTT原理" class="headerlink" title="2 MQTT原理"></a>2 MQTT原理</h2><h3 id="2-1-组成部分"><a href="#2-1-组成部分" class="headerlink" title="2.1 组成部分"></a>2.1 组成部分</h3><p>可以将MQTT拆分为服务端和客户端两部分来理解：</p>
<ol>
<li><p><strong>服务端</strong><br> 负责处理客户端的请求以及消息推送。</p>
</li>
<li><p><strong>客户端</strong><br> 在与服务器建立连接后，可以主动发布消息或订阅主题。</p>
</li>
</ol>
<h3 id="2-2-消息推送"><a href="#2-2-消息推送" class="headerlink" title="2.2 消息推送"></a>2.2 消息推送</h3><ol>
<li><strong>订阅主题</strong></li>
</ol>
<p>当客户端订阅了某个主题，且该主题有更新时，才会收到消息推送。</p>
<ol start="2">
<li><strong>发布主题</strong></li>
</ol>
<p>当客户端发布了某个主题，所有订阅该主题的客户端，在该主题更新时，都会收到推送。</p>
<h3 id="2-3-服务质量"><a href="#2-3-服务质量" class="headerlink" title="2.3 服务质量"></a>2.3 服务质量</h3><p>MQTT有三种消息服务质量，可根据不同应用场景选择对应的服务质量，确保消息推送符合要求。</p>
<ul>
<li><strong>Qos0：最多一次</strong></li>
<li><strong>Qos1：最少一次</strong></li>
<li><strong>Qos2：只有一次</strong></li>
</ul>
<h2 id="3-MQTT协议格式"><a href="#3-MQTT协议格式" class="headerlink" title="3 MQTT协议格式"></a>3 MQTT协议格式</h2><p>MQTT数据包结构：固定头部+可变头部+有效载荷。</p>
<p>下面以<a href="https://open.iot.10086.cn/">OneNET</a>的MQTT协议接入为例说明：</p>
<h3 id="3-1-固定头部"><a href="#3-1-固定头部" class="headerlink" title="3.1 固定头部"></a>3.1 固定头部</h3><p>固定头部存在于所有MQTT数据包中，表示数据包类型。</p>
<p>固定头部格式如下所示：</p>
<table border="1" cellspacing="0" width="100%" cellpadding="2" style="text-align: center;">
    <caption>MQTT固定头部格式</caption>
    <thead>
        <tr>
            <th>Bit</th>
            <th>7</th>
            <th>6</th>
            <th>5</th>
            <th>4</th>
            <th>3</th>
            <th>2</th>
            <th>1</th>
            <th>0</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>Byte 1</td>
            <td colspan="4">MQTT Packet Type</td>
            <td>0</td>
            <td>0</td>
            <td>0</td>
            <td>0</td>
            </tr>
            <tr>
            <td>Byte 2-5</td>
            <td colspan="8">Remaining Length（该字段占用1~4字节）</td>
        </tr>
    </tbody>
</table>

<p>其中Remaining Length是 剩余长度 ，表示后面还剩多少字节的数据，而剩余长度最大可占用4字节(剩余长度采用的128进制，所以理论上MQTT能发送的最大报文为2<sup>28</sup>=256M，但云平台往往会限制MQTT单个发布消息的最大长度，比如阿里云超过256KB的消息会被拒绝)。</p>
<h3 id="3-2-可变头部"><a href="#3-2-可变头部" class="headerlink" title="3.2 可变头部"></a>3.2 可变头部</h3><p>可变头部只存在于部分MQTT数据包中，是否有可变头部由固定头部的数据包类型决定。</p>
<p>下面以MQTT连接消息数据包的可变头部为例：</p>
<table border="1" cellspacing="0" width="100%" cellpadding="2" style="text-align: center;">
    <caption>MQTT可变头部格式</caption>
    <thead>
        <tr>
            <th>Bytes\Bit</th>
            <th>描述</th>
            <th>7</th>
            <th>6</th>
            <th>5</th>
            <th>4</th>
            <th>3</th>
            <th>2</th>
            <th>1</th>
            <th>0</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td rowspan="2">Byte 1-2</td>
            <td rowspan="2">协议名<br>长度</td>
            <td>0</td>
            <td>0</td>
            <td>0</td>
            <td>0</td>
            <td>0</td>
            <td>0</td>
            <td>0</td>
            <td>0</td>
        </tr>
        <tr>
            <td>0</td>
            <td>0</td>
            <td>0</td>
            <td>0</td>
            <td>0</td>
            <td>1</td>
            <td>0</td>
            <td>0</td>
        </tr>
        <tr>
            <td>Byte 3</td>
            <td>'M'</td>
            <td>0</td>
            <td>1</td>
            <td>0</td>
            <td>0</td>
            <td>1</td>
            <td>1</td>
            <td>0</td>
            <td>1</td>
        </tr>
        <tr>
            <td>Byte 4</td>
            <td>'Q'</td>
            <td>0</td>
            <td>1</td>
            <td>0</td>
            <td>1</td>
            <td>0</td>
            <td>0</td>
            <td>0</td>
            <td>1</td>
        </tr>
        <tr>
            <td>Byte 5</td>
            <td>'T'</td>
            <td>0</td>
            <td>1</td>
            <td>0</td>
            <td>1</td>
            <td>0</td>
            <td>1</td>
            <td>0</td>
            <td>0</td>
        </tr>
        <tr>
            <td>Byte 6</td>
            <td>'T'</td>
            <td>0</td>
            <td>1</td>
            <td>0</td>
            <td>1</td>
            <td>0</td>
            <td>1</td>
            <td>0</td>
            <td>0</td>
        </tr>
        <tr>
            <td>Byte 7</td>
            <td>协议版本</td>
            <td>0</td>
            <td>0</td>
            <td>0</td>
            <td>0</td>
            <td>0</td>
            <td>1</td>
            <td>0</td>
            <td>0</td>
        </tr>
        <tr>
            <td rowspan="2">Byte 8</td>
            <td rowspan="2">连接标志</td>
            <td>User</td>
            <td>Password</td>
            <td>Will<br>Retain</td>
            <td colspan="2">WillQos</td>
            <td>Will</td>
            <td>Clean<br>Session</td>
            <td>Reserve</td>
        </tr>
        <tr>
            <td>1</td>
            <td>1</td>
            <td>0</td>
            <td>0</td>
            <td>0</td>
            <td>1</td>
            <td>0</td>
            <td>0</td>
        </tr>
        <tr>
            <td rowspan="2">Byte 9-10</td>
            <td rowspan="2">保活时间<br>300s</td>
            <td>0</td>
            <td>0</td>
            <td>0</td>
            <td>0</td>
            <td>0</td>
            <td>0</td>
            <td>0</td>
            <td>1</td>
        </tr>
        <tr>
            <td>0</td>
            <td>0</td>
            <td>1</td>
            <td>0</td>
            <td>1</td>
            <td>1</td>
            <td>0</td>
            <td>0</td>
        </tr>
    </tbody>
</table>

<h3 id="3-3-有效载荷"><a href="#3-3-有效载荷" class="headerlink" title="3.3 有效载荷"></a>3.3 有效载荷</h3><p>有效载荷也叫消息体，存在于部分MQTT数据包中，是否存在由MQTT数据包类型决定。</p>
<p>下面以MQTT连接消息数据包的有效载荷为例：</p>
<table border="1" cellspacing="0" width="100%" cellpadding="2" style="text-align: center;">
    <caption>MQTT有效载荷格式</caption>
    <thead>
        <tr>
            <th>Bytes</th>
            <th>描述</th>
            <th>格式</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>Byte 1</td>
            <td>设备ID（ClientIdentifier）</td>
            <td>2字节字符串长度<br>+字符串"ClientIdentifier"</td>
        </tr>
        <tr>
            <td>Byte 2</td>
            <td>产品ID（UserName）</td>
            <td>2字节字符串长度<br>+字符串"UserName"</td>
        </tr>
        <tr>
            <td>Byte 3</td>
            <td>鉴权信息（UserPassword）</td>
            <td>2字节字符串长度<br>+字符串"UserPassword"</td>
        </tr>
    </tbody>
</table>]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>技术</tag>
        <tag>MQTT</tag>
      </tags>
  </entry>
  <entry>
    <title>Markdown语法测试</title>
    <url>/2020/04/05/Markdown%E8%AF%AD%E6%B3%95%E6%B5%8B%E8%AF%95/</url>
    <content><![CDATA[<h2 id="1-标题测试"><a href="#1-标题测试" class="headerlink" title="1 标题测试"></a>1 标题测试</h2><p><code>Markdown</code>有<code>1-6</code>级标题，效果如下所示：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="section"># 一级标题</span></span><br></pre></td></tr></table></figure>

<h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="section">## 二级标题</span></span><br></pre></td></tr></table></figure>

<h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="section">### 三级标题</span></span><br></pre></td></tr></table></figure>

<h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="section">#### 四级标题</span></span><br></pre></td></tr></table></figure>

<h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="section">##### 五级标题</span></span><br></pre></td></tr></table></figure>

<h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="section">###### 六级标题</span></span><br></pre></td></tr></table></figure>

<h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6><h2 id="2-字体样式"><a href="#2-字体样式" class="headerlink" title="2 字体样式"></a>2 字体样式</h2><h3 id="2-1-斜体样式"><a href="#2-1-斜体样式" class="headerlink" title="2.1 斜体样式"></a>2.1 斜体样式</h3><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="emphasis">*这是斜体样式*</span></span><br><span class="line"><span class="emphasis">_这也是斜体样式_</span></span><br></pre></td></tr></table></figure>

<p><em>这是斜体样式</em></p>
<p><em>这也是斜体样式</em></p>
<h3 id="2-2-粗体样式"><a href="#2-2-粗体样式" class="headerlink" title="2.2 粗体样式"></a>2.2 粗体样式</h3><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="strong">**这是粗体样式**</span></span><br></pre></td></tr></table></figure>

<p><strong>这是粗体样式</strong></p>
<h3 id="2-3-加粗斜体样式"><a href="#2-3-加粗斜体样式" class="headerlink" title="2.3 加粗斜体样式"></a>2.3 加粗斜体样式</h3><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="strong">**<span class="emphasis">*这是加速斜体样式<span class="strong">**<span class="emphasis">*</span></span></span></span></span><br></pre></td></tr></table></figure>

<p><em><strong>这是加粗斜体样式</strong></em></p>
<h3 id="2-4-删除线样式"><a href="#2-4-删除线样式" class="headerlink" title="2.4 删除线样式"></a>2.4 删除线样式</h3><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">~~这是删除线样式~~</span><br></pre></td></tr></table></figure>

<p><del>这是删除线样式</del></p>
<h3 id="2-5-分隔线样式"><a href="#2-5-分隔线样式" class="headerlink" title="2.5 分隔线样式"></a>2.5 分隔线样式</h3><p>你可以使用三个以上的<code>*</code>、<code>-</code>、’_’来建立分隔线，中间可以插入空格。</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="bullet">*</span> <span class="emphasis">* *</span></span><br><span class="line"><span class="strong">**<span class="emphasis">*</span></span></span><br><span class="line"><span class="strong"><span class="emphasis">- - -</span></span></span><br><span class="line"><span class="strong"><span class="emphasis">---</span></span></span><br><span class="line"><span class="strong"><span class="emphasis"><span class="strong">__<span class="emphasis">_</span></span></span></span></span><br><span class="line"><span class="strong"><span class="emphasis"><span class="strong"><span class="emphasis">_</span> <span class="emphasis">_ _</span></span></span></span></span><br></pre></td></tr></table></figure>

<hr>
<hr>
<hr>
<hr>
<hr>
<hr>
<h2 id="3-超链接"><a href="#3-超链接" class="headerlink" title="3 超链接"></a>3 超链接</h2><h3 id="3-1-行内式超链接"><a href="#3-1-行内式超链接" class="headerlink" title="3.1 行内式超链接"></a>3.1 行内式超链接</h3><p>行内式一般使用较多，语法说明如下：</p>
<p><code>[链接文字](链接地址 &quot;链接标题&quot;)</code></p>
<div class="note warning flat"><p>注意，链接标题会在鼠标悬停时显示，也可不加。</p>
</div>

<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">[<span class="string">百度</span>](<span class="link">https://www.baidu.com &quot;百度一下，你就知道&quot;</span>)</span><br></pre></td></tr></table></figure>

<p><a href="https://www.baidu.com/" title="百度一下，你就知道">百度</a></p>
<h3 id="3-2-参考式超链接"><a href="#3-2-参考式超链接" class="headerlink" title="3.2 参考式超链接"></a>3.2 参考式超链接</h3><p>参考式一般用于学术论文，或者某些链接在文章中被反复使用，这时使用参考式就可以很方便地对链接进行管理，参考式语法说明如下：</p>
<ol>
<li><code>[链接文字][链接标记]</code></li>
<li><code>[链接标记]:链接地址 &quot;链接标题&quot;</code></li>
</ol>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">[<span class="string">GitHub</span>][<span class="symbol">link1</span>]</span><br><span class="line">[<span class="string">Gitee</span>][<span class="symbol">link2</span>]</span><br><span class="line">[<span class="string">我的博客</span>][<span class="symbol">link3</span>]</span><br><span class="line">[<span class="symbol">link1</span>]:<span class="link">https://www.github.com &quot;GitHub&quot;</span></span><br><span class="line">[<span class="symbol">link2</span>]:<span class="link">https://www.gitee.com &quot;码云&quot;</span></span><br><span class="line">[<span class="symbol">link3</span>]:<span class="link">https://gentletk.gitee.io &quot;云&quot;</span></span><br></pre></td></tr></table></figure>

<p><a href="https://www.github.com/" title="GitHub">GitHub</a><br><a href="https://www.gitee.com/" title="码云">Gitee</a><br><a href="https://gentletk.gitee.io/" title="云">我的博客</a></p>
<h3 id="3-3-自动链接"><a href="#3-3-自动链接" class="headerlink" title="3.3 自动链接"></a>3.3 自动链接</h3><p><code>Markdown</code>同样支持简短的自动链接，语法也非常简单，只需要用<code>&lt;&gt;</code>把链接包起来就行。</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="xml">&lt;https://cn.bing.com/&gt;</span></span><br></pre></td></tr></table></figure>

<p><a href="https://cn.bing.com/">https://cn.bing.com/</a></p>
<h2 id="4-锚点"><a href="#4-锚点" class="headerlink" title="4 锚点"></a>4 锚点</h2><p>在网页中，锚点可以实现页内跳转，而<code>Markdown</code>同样支持这一点，语法说明如下：</p>
<p><code>[链接文字](#文章标记)</code></p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">跳转到[<span class="string">一级标题</span>](<span class="link">#一级标题</span>)</span><br></pre></td></tr></table></figure>

<p>跳转到<a href="#%E4%B8%80%E7%BA%A7%E6%A0%87%E9%A2%98">一级标题</a>。</p>
<h2 id="5-列表"><a href="#5-列表" class="headerlink" title="5 列表"></a>5 列表</h2><h3 id="5-1-无序列表"><a href="#5-1-无序列表" class="headerlink" title="5.1 无序列表"></a>5.1 无序列表</h3><p>在<code>Markdown</code>中，可以使用<code>*</code>,<code>+</code>,<code>-</code>来表示无序列表。</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="bullet">-</span> 无序列表项一</span><br><span class="line"><span class="bullet">-</span> 无序列表项二</span><br><span class="line"><span class="bullet">-</span> 无序列表项三</span><br></pre></td></tr></table></figure>

<ul>
<li>无序列表项一</li>
<li>无序列表项二</li>
<li>无序列表项三</li>
</ul>
<p>也可使用2个空格缩进来显示多级无序列表：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="bullet">-</span> 无序列表项一</span><br><span class="line"><span class="bullet">  -</span> 无序列表子项一</span><br><span class="line"><span class="bullet">-</span> 无序列表项二</span><br><span class="line"><span class="bullet">  -</span> 无序列表子项二</span><br><span class="line"><span class="bullet">-</span> 无序列表项三</span><br><span class="line"><span class="bullet">  -</span> 无序列表子项三</span><br></pre></td></tr></table></figure>

<ul>
<li>无序列表项一<ul>
<li>无序列表子项一</li>
</ul>
</li>
<li>无序列表项二<ul>
<li>无序列表子项二</li>
</ul>
</li>
<li>无序列表项三<ul>
<li>无序列表子项三</li>
</ul>
</li>
</ul>
<h3 id="5-2-有序列表"><a href="#5-2-有序列表" class="headerlink" title="5.2 有序列表"></a>5.2 有序列表</h3><p>有序列表只需要使用数字紧跟一个英文句点，然后在空格后输入列表项即可。</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="bullet">1.</span> 有序列表项一</span><br><span class="line"><span class="bullet">2.</span> 有序列表项二</span><br><span class="line"><span class="bullet">3.</span> 有序列表项三</span><br></pre></td></tr></table></figure>

<ol>
<li>有序列表项一</li>
<li>有序列表项二</li>
<li>有序列表项三</li>
</ol>
<h2 id="6-引用"><a href="#6-引用" class="headerlink" title="6 引用"></a>6 引用</h2><p>引用只需在前面加上<code>&gt;</code>。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&gt; 这是引用。</span><br></pre></td></tr></table></figure>

<blockquote>
<p>这是引用。</p>
</blockquote>
<h2 id="7-插入图像"><a href="#7-插入图像" class="headerlink" title="7 插入图像"></a>7 插入图像</h2><p>插入图像的方法和超链接类似，都支持行内式和参考式。</p>
<h3 id="7-1-行内式插入图像"><a href="#7-1-行内式插入图像" class="headerlink" title="7.1 行内式插入图像"></a>7.1 行内式插入图像</h3><p>一般使用行内式插入图像，行内式语法说明：<code>![图片Alt](图片地址 &quot;图片标题&quot;)</code></p>
<div class="note warning flat"><p>注意：</p>
<ol>
<li>图片Alt为图片无法显示时的替换文字，用于描述图片。</li>
<li>图片地址可以为网络地址也可以为本地绝对/相对地址。</li>
<li>图片标题会在鼠标悬停时显示，也可不加。</li>
</ol>
</div>

<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">![<span class="string">我的头像</span>](<span class="link">https://i.loli.net/2020/02/26/7qQOR2Lrdu4AZJc.png &quot;头像&quot;</span>)</span><br></pre></td></tr></table></figure>

<p><img src="https://i.loli.net/2020/02/26/7qQOR2Lrdu4AZJc.png" alt="我的头像" title="头像"></p>
<h3 id="7-2-参考式插入图像"><a href="#7-2-参考式插入图像" class="headerlink" title="7.2 参考式插入图像"></a>7.2 参考式插入图像</h3><p>参考式插入图像语法说明如下：</p>
<ol>
<li><code>![图像Alt][图像标记]</code></li>
<li><code>[图像标记]:图像地址 &quot;图像标题&quot;</code></li>
</ol>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">![<span class="string">黑白pic</span>][<span class="symbol">1</span>]</span><br><span class="line">![<span class="string">橙色pic</span>][<span class="symbol">2</span>]</span><br><span class="line">![<span class="string">绿色pic</span>][<span class="symbol">3</span>]</span><br><span class="line">[<span class="symbol">1</span>]:<span class="link">https://i.loli.net/2021/04/26/keAljdWQU1rzNvm.png &quot;黑白pic&quot;</span></span><br><span class="line">[<span class="symbol">2</span>]:<span class="link">https://i.loli.net/2021/04/26/jbsHEnOC6MmoqzW.png &quot;橙色pic&quot;</span></span><br><span class="line">[<span class="symbol">3</span>]:<span class="link">https://i.loli.net/2021/04/26/9A6dXSjJ3iaqE5P.png &quot;绿色pic&quot;</span></span><br></pre></td></tr></table></figure>

<p><img src="https://i.loli.net/2021/04/26/keAljdWQU1rzNvm.png" alt="黑白pic" title="黑白pic"><br><img src="https://i.loli.net/2021/04/26/jbsHEnOC6MmoqzW.png" alt="橙色pic" title="橙色pic"><br><img src="https://i.loli.net/2021/04/26/9A6dXSjJ3iaqE5P.png" alt="绿色pic" title="绿色pic"></p>
<h2 id="8-表格"><a href="#8-表格" class="headerlink" title="8 表格"></a>8 表格</h2><p><code>Markdown</code>支持简单的表格显示，如果需要复杂表格，可以使用<code>HTML</code>中的表格。</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">表头一|表头二|表头三</span><br><span class="line">:-|:-|:-</span><br><span class="line">单元格一|单元格二|单元格三</span><br></pre></td></tr></table></figure>

<div class="note warning flat"><p>注意：</p>
<ol>
<li><code>:-</code>表示单元格内容左对齐。</li>
<li><code>:-:</code>表示单元格内容居中对齐。</li>
<li><code>-:</code>表示单元格内容右对齐。</li>
</ol>
</div>

<table>
<thead>
<tr>
<th align="left">表头一</th>
<th align="left">表头二</th>
<th align="left">表头三</th>
</tr>
</thead>
<tbody><tr>
<td align="left">单元格一</td>
<td align="left">单元格二</td>
<td align="left">单元格三</td>
</tr>
</tbody></table>
<h2 id="9-代码"><a href="#9-代码" class="headerlink" title="9 代码"></a>9 代码</h2><h3 id="9-1-单行代码"><a href="#9-1-单行代码" class="headerlink" title="9.1 单行代码"></a>9.1 单行代码</h3><p>单行代码使用一对反引号(反引号键一般在键盘ESC键下面)括起来。</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="code">`printf(&quot;这是一行代码!\n&quot;);`</span></span><br></pre></td></tr></table></figure>

<p><code>printf(&quot;这是一行代码!\n&quot;);</code></p>
<h3 id="9-2-多行代码"><a href="#9-2-多行代码" class="headerlink" title="9.2 多行代码"></a>9.2 多行代码</h3><p>多行代码一般以三个反引号开头，再以三个反引号结尾。</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">​<span class="code">```C</span></span><br><span class="line"><span class="code">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="code">int main(void)</span></span><br><span class="line"><span class="code">&#123;</span></span><br><span class="line"><span class="code">    printf(&quot;这是一段代码!\n&quot;);</span></span><br><span class="line"><span class="code">    return 0</span></span><br><span class="line"><span class="code">&#125;</span></span><br><span class="line"><span class="code">​```</span></span><br></pre></td></tr></table></figure>

<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;这是一段代码!\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="10-HTML元素"><a href="#10-HTML元素" class="headerlink" title="10 HTML元素"></a>10 HTML元素</h2><p>目前支持的 HTML 元素有：<code>&lt;kbd&gt;</code>、 <code>&lt;b&gt;</code>、 <code>&lt;i&gt;</code>、 <code>&lt;em&gt;</code>、 <code>&lt;sup&gt;</code>、 <code>&lt;sub&gt;</code>、 <code>&lt;br&gt;</code>等。</p>
<p>最常用的电脑快捷键：<kbd>Ctrl</kbd>+<kbd>C</kbd>，<kbd>Ctrl</kbd>+<kbd>V</kbd>。</p>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>技术</tag>
        <tag>Markdown</tag>
      </tags>
  </entry>
  <entry>
    <title>Proteus 7 Professional安装</title>
    <url>/2020/03/15/Proteus%207%20Professional%E5%AE%89%E8%A3%85/</url>
    <content><![CDATA[<h2 id="1以管理员身份运行P7-8sp2-exe"><a href="#1以管理员身份运行P7-8sp2-exe" class="headerlink" title="1以管理员身份运行P7.8sp2.exe"></a>1以管理员身份运行P7.8sp2.exe</h2><h3 id="1-1-安装欢迎界面"><a href="#1-1-安装欢迎界面" class="headerlink" title="1.1 安装欢迎界面"></a>1.1 安装欢迎界面</h3><p><img src="https://i.loli.net/2021/04/25/QWU9bpsO2PJI5wN.png" alt="安装欢迎界面"></p>
<h3 id="1-2-许可证书界面"><a href="#1-2-许可证书界面" class="headerlink" title="1.2 许可证书界面"></a>1.2 许可证书界面</h3><p><img src="https://i.loli.net/2021/04/25/gaerE4dZs1k8i6R.png" alt="证书许可界面"></p>
<h3 id="1-3-选择从本地安装许可证"><a href="#1-3-选择从本地安装许可证" class="headerlink" title="1.3 选择从本地安装许可证"></a>1.3 选择从本地安装许可证</h3><p><img src="https://i.loli.net/2021/04/25/1dTnpNSIkCe6cqj.png" alt="选择本地许可证"></p>
<p><img src="https://i.loli.net/2021/04/25/458QRftqZEcGkSK.png" alt="第一次安装无许可证"></p>
<p><code>Key File</code>其实就是<code>LICENCE.lxk</code></p>
<p><img src="https://i.loli.net/2021/04/25/nRVjekbTDv41mwg.png" alt="选择key文件"></p>
<p><img src="https://i.loli.net/2021/04/25/o58BI1DvgwiVdq4.png" alt="安装许可证"></p>
<p><img src="https://i.loli.net/2021/04/25/GpAK6Y8vwZjINiL.png" alt="选择是"></p>
<p><img src="https://i.loli.net/2021/04/25/FAbQw2XC3tyYGkT.png" alt="关闭许可证管理"></p>
<p><img src="https://i.loli.net/2021/04/25/9EhDytl7bciqU6K.png" alt="有密钥则继续"></p>
<h3 id="1-4-选择安装路径及功能"><a href="#1-4-选择安装路径及功能" class="headerlink" title="1.4 选择安装路径及功能"></a>1.4 选择安装路径及功能</h3><p>记住这个安装路径，比如我的在D盘就是<code>D:\Program Files (x86)\Labcenter Electronics\Proteus 7 Professional</code></p>
<p><img src="https://i.loli.net/2021/04/25/Ncf6Whx1gpSJVoO.png" alt="选择安装路径"></p>
<p><img src="https://i.loli.net/2021/04/25/JUPHrkMmXxTZGNz.png" alt="选择功能"></p>
<p><img src="https://i.loli.net/2021/04/25/35Ab92KfhJCzBgi.png" alt="选择程序目录"></p>
<p><img src="https://i.loli.net/2021/04/25/gHd8LJcQn5wCmEb.png" alt="安装结束"></p>
<h2 id="2-破解Proteus-7-Professional"><a href="#2-破解Proteus-7-Professional" class="headerlink" title="2 破解Proteus 7 Professional"></a>2 破解Proteus 7 Professional</h2><p>以管理员身份运行<code>Proteus Pro 7.8 SP2破解 1.0.exe</code>，记得要在浏览里选择安装路径。</p>
<p>我的在D盘就是<code>D:\Program Files (x86)\Labcenter Electronics\Proteus 7 Professional</code></p>
<p><img src="https://i.loli.net/2021/04/25/rgwUdlPTMkVOWZC.png" alt="破解"></p>
<p>破解成功后关闭破解软件。</p>
<h2 id="3-汉化Proteus-7-Professional"><a href="#3-汉化Proteus-7-Professional" class="headerlink" title="3 汉化Proteus 7 Professional"></a>3 汉化Proteus 7 Professional</h2><p>汉化需要替换安装路径<code>D:\Program Files (x86)\Labcenter Electronics\Proteus 7 Professional\BIN</code>下的<code>ARES.DLL</code>和<code>ISIS.DLL</code>两个文件。</p>
<p>首先在BIN目录下创建一个<code>DLLBackup</code>文件夹，将安装路径下的这两个文件拷贝到<code>DLLBackup</code>做一个备份：</p>
<p><img src="https://i.loli.net/2021/04/25/C5hVlEw4rb9AUIJ.png" alt="备份DLL"></p>
<p>备份后将汉化包下的<code>ARES.DLL</code>和<code>ISIS.DLL</code>两个文件拷贝到<code>BIN</code>目录下，替换掉原有的文件。</p>
<p>最后找到<code>ISIS.EXE</code>文件，单击右键选择发送到桌面快捷方式，命名为<code>Proteus 7 Professional</code>，双击图标运行<code>Proteus 7 Professional</code>。</p>
<p><img src="https://i.loli.net/2021/04/25/Z8ODywC2Qjn9mWF.png" alt="运行预览"></p>
<p><img src="https://i.loli.net/2021/04/25/VRbTG1e5UDwXhgr.png" alt="忽略错误"></p>
<p>关闭软件，然后将“汉化报错.exe” 复制到BIN文件夹下以管理员身份运行，再次打开软件后就不会出现错误了。</p>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>技术</tag>
        <tag>Proteus</tag>
      </tags>
  </entry>
  <entry>
    <title>使用Vercel托管自己的网站</title>
    <url>/2021/01/30/%E4%BD%BF%E7%94%A8Vercel%E6%89%98%E7%AE%A1%E8%87%AA%E5%B7%B1%E7%9A%84%E7%BD%91%E7%AB%99/</url>
    <content><![CDATA[<p>无论你是想要有一个自己的博客，还是想将自己的小项目发布到外网，给所有人访问，Vercel绝对是一个经济实惠的选择。</p>
<div class="note info flat"><p>注意，在使用Vercel前请确保你已安装<code>Git</code>与<code>Node.js</code>。</p>
</div>

<h2 id="1-注册并安装"><a href="#1-注册并安装" class="headerlink" title="1 注册并安装"></a>1 注册并安装</h2><p>首先前往<a href="https://vercel.com/">Vercel官网</a>注册一个账号，现在注册新用户必须使用<code>GitHub</code>、<code>GitLab</code>或者<code>BitBucket</code>的账户进行授权，并绑定手机号，注册完成后可以在配置页面修改自己的邮箱。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安装Vercel</span></span><br><span class="line">npm i -g vercel</span><br><span class="line"></span><br><span class="line"><span class="comment"># 登陆Vercel，vc是Vercel的简写，也可使用Vercel代替</span></span><br><span class="line">vc login YourEmailAddress</span><br></pre></td></tr></table></figure>

<p><code>Vercel</code>会向你的邮箱发送一封邮件，确认后即可登陆：</p>
<p><img src="https://i.loli.net/2021/04/28/sJy5ui6IRS3tEYD.png" alt="image-20210428151329447"></p>
<p><img src="https://i.loli.net/2021/04/28/oEjkAV4LmOf2rP1.png" alt="image-20210428151530306"></p>
<h2 id="2-发布你的网站-项目"><a href="#2-发布你的网站-项目" class="headerlink" title="2 发布你的网站/项目"></a>2 发布你的网站/项目</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 发布网站/项目</span></span><br><span class="line">vc --prod</span><br></pre></td></tr></table></figure>

<p>项目配置基本上一路回车就行，我这里的项目是一个合成大西瓜的小游戏：</p>
<p><img src="https://i.loli.net/2021/04/28/bG5kEYxLBpK284j.png" alt="image-20210428153114634"></p>
<p>发布后会得到两个个网址，随便打开一个就可以进入游戏了，但是这个网址看上去并不是特别优雅，如果你有域名的话，不妨和我一起设置一下。</p>
<p><a href="https://daxigua-3lndp9zw9-gentletk.vercel.app/">合成大西瓜网址1</a></p>
<p><a href="https://daxigua-kappa-gules.vercel.app/">合成大西瓜网址2</a></p>
<h2 id="3-绑定你的域名"><a href="#3-绑定你的域名" class="headerlink" title="3 绑定你的域名"></a>3 绑定你的域名</h2><p>如果你有域名的话，可以把它绑定到<code>Vercel</code>：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 绑定自己的域名</span></span><br><span class="line">vc domains add YourDomains</span><br></pre></td></tr></table></figure>

<p>运行命令后，有可能会提示你输入项目名称(我这里的项目名称为<code>daxigua</code>)：</p>
<p><img src="https://i.loli.net/2021/04/28/WFYuK7Gmn6jHq3f.png" alt="image-20210428164129202"></p>
<p>根据提示信息来看，<code>Vercel</code>让我们改一下DNS解析的服务器地址并且会发一封邮件给我们，根据邮件提示，有两种方式可以达到目的：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 方法一</span></span><br><span class="line">@ A 76.76.21.21</span><br><span class="line"><span class="comment"># 方法二</span></span><br><span class="line">ns1.vercel-dns.com</span><br><span class="line">ns2.vercel-dns.com</span><br></pre></td></tr></table></figure>

<p>我这里直接选第一种，首先在购买域名的地方进入控制台，然后找到DNS解析服务，添加记录集：</p>
<p><img src="https://i.loli.net/2021/04/28/wxmrazg2BkYcbUv.png" alt="image-20210428155853129"></p>
<p>配置完成后，会收到一封邮件，提示你在终端使用<code>vc --prod</code>命令再次发布一下：</p>
<p><img src="https://i.loli.net/2021/04/28/eNIToanWzl93GOM.png" alt="image-20210428164524093"></p>
<p>发现可以通过自己的域名访问<a href="https://daxigua.liyunliang.com/">合成大西瓜</a>了。</p>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>技术</tag>
        <tag>Vercel</tag>
      </tags>
  </entry>
  <entry>
    <title>兼容C51与STM32的Keil5安装方法</title>
    <url>/2020/03/22/%E5%85%BC%E5%AE%B9C51%E4%B8%8ESTM32%E7%9A%84Keil5%E5%AE%89%E8%A3%85%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[<h2 id="1-安装C51V900-exe"><a href="#1-安装C51V900-exe" class="headerlink" title="1 安装C51V900.exe"></a>1 安装C51V900.exe</h2><p>以管理员身份运行<code>C51V900.exe</code>文件，进入安装欢迎界面点击<code>Next</code>，勾选<code>agree</code>然后点<code>Next</code>，进入选择安装路径界面，确定安装路径，然后点击<code>Next</code>：</p>
<p><img src="https://i.loli.net/2021/04/25/NTwplyZgHvzRShm.png" alt="c51选择路径"></p>
<p>注册信息敲空格就行，然后点击<code>Next</code>开始安装：</p>
<p><img src="https://i.loli.net/2021/04/25/Iu72ALs4ZiQkM8z.png" alt="c51注册信息"></p>
<p>安装完成后去掉勾选，点击<code>Finish</code>：</p>
<p><img src="https://i.loli.net/2021/04/25/TbCexVgS2iRqfBU.png" alt="c51去掉勾选"></p>
<h2 id="2-安装mdk514-exe"><a href="#2-安装mdk514-exe" class="headerlink" title="2 安装mdk514.exe"></a>2 安装mdk514.exe</h2><p>以管理员身份运行<code>mdk514.exe</code>文件,进入安装欢迎界面点击<code>Next</code>，勾选<code>agree</code>然后点<code>Next</code>，进入选择安装路径界面，确定安装路径，然后点击<code>Next</code>：</p>
<p><img src="https://i.loli.net/2021/04/25/5963AilzuDndVRe.png" alt="32选择路径"></p>
<p>注册信息敲空格就行，然后点击<code>Next</code>开始安装：</p>
<p><img src="https://i.loli.net/2021/04/25/TwKdVufLg5qI8UZ.png" alt="32注册信息"></p>
<p>安装完成后去掉勾选，点击<code>Finish</code>：</p>
<p><img src="https://i.loli.net/2021/04/25/7CnfM3cZ4mkLzFy.png" alt="32去掉勾选"></p>
<p>出现<code>Pack Installer</code>界面直接关掉即可(点击<code>OK</code>，出现弹窗后再点击<code>是</code>)</p>
<p><img src="https://i.loli.net/2021/04/25/3c8yFMZuOQ2rDpT.png" alt="pack安装界面"></p>
<h2 id="3-C51与STM32共存"><a href="#3-C51与STM32共存" class="headerlink" title="3 C51与STM32共存"></a>3 C51与STM32共存</h2><p>打开<code>C51</code>安装路径，复制整个<code>C51</code>文件夹到<code>Keil_v5</code>下：</p>
<p><img src="https://i.loli.net/2021/04/25/XZSqTLi2k4eH9A5.png" alt="c51文件夹"></p>
<p><img src="https://i.loli.net/2021/04/25/ergNcRzdbuvEYlJ.png" alt="c51复制到keil5"></p>
<p>打开<code>C51</code>安装路径下的<code>UV4</code>文件夹，全选并复制，然后粘贴到<code>Keil_v5</code>下的<code>UV4</code>文件夹里，提示冲突的话就选择跳过，然后打开<code>C51</code>安装路径下的<code>TOOLS.INI</code>文件，复制里面所有内容，然后粘贴到<code>Keil_v5</code>下的<code>TOOLS.INI</code>最后一行，然后将复制过来的内容里的PATH改成当前的路径：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 未改动前</span></span><br><span class="line">[c51]</span><br><span class="line">PATH=<span class="string">&quot;D:\Tools\MDK\C51&quot;</span></span><br><span class="line"><span class="comment"># 改动后</span></span><br><span class="line">[c51]</span><br><span class="line">PATH=<span class="string">&quot;D:\Tools\Keil_v5\C51&quot;</span></span><br></pre></td></tr></table></figure>

<p>改动完成后<code>Ctrl+s</code>保存文件。</p>
<h2 id="4-破解"><a href="#4-破解" class="headerlink" title="4 破解"></a>4 破解</h2><p>打开<code>Keil_v5</code>安装路径下的<code>UV4</code>文件夹，以管理员身份运行<code>UV4.exe</code>。</p>
<p><img src="https://i.loli.net/2021/04/25/C3fJkO2mPdsbahq.png" alt="打开UV4"></p>
<p>点击左上角<code>File</code>-&gt;<code>License Management</code>，复制<code>CID</code>：</p>
<p><img src="https://i.loli.net/2021/04/25/kptxfhXaewPKqy9.png" alt="licenseManagement"></p>
<p>以管理员身份运行<code>keygen.exe</code>，将复制CID粘贴到里面点击<code>Generate</code></p>
<p><img src="https://i.loli.net/2021/04/25/dcbi6E7Up8g4xyD.png" alt="c51keygen"></p>
<p>将生成的序列号复制到<code>New License ID Code</code>，点击<code>Add LIC</code>：</p>
<p><img src="https://i.loli.net/2021/04/25/695urvBjHZS8tkd.png" alt="c51注册成功"></p>
<p>然后将<code>Target</code>选择为<code>ARM</code>，再点击<code>Generate</code>：</p>
<p><img src="https://i.loli.net/2021/04/25/Yt2p8cW1sMy7uiZ.png" alt="32keygen"></p>
<p>并将生成的序列号复制粘贴到<code>New License ID Code</code>，点击<code>Add LIC</code>：</p>
<p><img src="https://i.loli.net/2021/04/25/tsE5eFuxcg6NOZJ.png" alt="32注册成功"></p>
<h2 id="5-添加快捷方式"><a href="#5-添加快捷方式" class="headerlink" title="5 添加快捷方式"></a>5 添加快捷方式</h2><p>打开<code>Keil_v5</code>安装路径下的<code>UV4</code>文件夹，右键单击<code>UV4.exe</code>，选择发送到桌面快捷方式，将快捷方式命名为<code>Keil uVision5</code>即可。</p>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>技术</tag>
        <tag>Keil</tag>
      </tags>
  </entry>
  <entry>
    <title>基于Hexo的免费个人网站</title>
    <url>/2020/02/23/%E5%9F%BA%E4%BA%8EHexo%E7%9A%84%E5%85%8D%E8%B4%B9%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99/</url>
    <content><![CDATA[<h1 id="先聊聊Gitee和GitHub的Pages服务"><a href="#先聊聊Gitee和GitHub的Pages服务" class="headerlink" title="先聊聊Gitee和GitHub的Pages服务"></a>先聊聊Gitee和GitHub的Pages服务</h1><p>今天跟大家分享一下利用Hexo+Gitee Pages搭建个人网站的一些经验，之所以用Gitee Pages而不是GitHub Pages，完全是因为GitHub的服务器在国外，国内访问速度慢到令人发指！！不过GitHub虽然慢，但人家不要钱啊，而且你完全能在阿里花一块钱买个域名绑定一下，比如我的：gentletk.top这样你的网站就看起来就有私人定制的那种高端感了。至于Gitee，虽然快，但你每次都得手动部署，而且它不支持自定义域名，你要访问的话只有老老实实访问gentletk.gitee.io，这样一看就有种廉价感。当然，如果你愿意充钱，Gitee是很乐意为你推荐他们的Gitee Pages Pro服务的，这样一来自动更新部署和自定义域名都无需你操心了。我原先选择的是GitHub Pages，其实它没什么不好，慢是因为我在国内，所以我不打算放弃它，来个双管齐下，国内访问:gentletk.gitee.io，国外访问:gentletk.top。</p>
<h1 id="1-Gitee相关"><a href="#1-Gitee相关" class="headerlink" title="1 Gitee相关"></a>1 Gitee相关</h1><h2 id="1-1-注册你的Gitee"><a href="#1-1-注册你的Gitee" class="headerlink" title="1.1 注册你的Gitee"></a>1.1 注册你的Gitee</h2><p><a href="https://gitee.com/">点我前往Gitee注册</a></p>
<h2 id="2-1-创建你的仓库"><a href="#2-1-创建你的仓库" class="headerlink" title="2.1 创建你的仓库"></a>2.1 创建你的仓库</h2><p>登陆到Gitee后，点击右上角<code>+</code>，选择新建仓库，其中仓库名要设置成你注册Gitee时的用户名：</p>
<p><img src="https://i.loli.net/2021/04/06/rzOSFmRnGsJdVML.png" alt="新建仓库.png"></p>
<h1 id="2-Hexo相关"><a href="#2-Hexo相关" class="headerlink" title="2 Hexo相关"></a>2 Hexo相关</h1><h2 id="2-1-安装并配置Git"><a href="#2-1-安装并配置Git" class="headerlink" title="2.1 安装并配置Git"></a>2.1 安装并配置Git</h2><h3 id="2-1-1-安装"><a href="#2-1-1-安装" class="headerlink" title="2.1.1 安装"></a>2.1.1 安装</h3><p><a href="https://git-scm.com/downloads">点我前往下载</a></p>
<p>安装适合你的版本</p>
<h3 id="2-1-2-配置用户信息"><a href="#2-1-2-配置用户信息" class="headerlink" title="2.1.2 配置用户信息"></a>2.1.2 配置用户信息</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config --global user.email <span class="string">&quot;email address&quot;</span></span><br><span class="line">git config --global user.name <span class="string">&quot;username&quot;</span></span><br></pre></td></tr></table></figure>

<h3 id="2-1-3-配置SSH-Key"><a href="#2-1-3-配置SSH-Key" class="headerlink" title="2.1.3 配置SSH Key"></a>2.1.3 配置SSH Key</h3><p>首先检查本机已存在的ssh密钥</p>
<p><code>cd ~/.ssh</code></p>
<p>如果提示No such file or directory</p>
<p>说明是第一次使用</p>
<p><code>ssh-keygen -t rsa -C &quot;e-mail address&quot;</code></p>
<p>持续三次回车，此时会生成一个文件在用户目录找到.ssh/id_rsa.pub文件，</p>
<p>复制里面的内容打开github主页，进入个人设置-&gt;SSH and GPG keys-&gt;New SSH key</p>
<p>将复制内容填入key，title随便设置，保存即可。</p>
<p>测试是否成功</p>
<p><code>ssh -T git@github.com</code></p>
<p><img src="https://i.loli.net/2020/02/26/baXWReYujlcVyOK.png" alt="image-20200225131448964.png"></p>
<h2 id="2-2-安装Node-js"><a href="#2-2-安装Node-js" class="headerlink" title="2.2 安装Node.js"></a>2.2 安装Node.js</h2><p><a href="https://nodejs.org/en/">点我前往下载</a></p>
<p>安装最新版即可</p>
<h2 id="2-3-安装Hexo"><a href="#2-3-安装Hexo" class="headerlink" title="2.3 安装Hexo"></a>2.3 安装Hexo</h2><p>进入任意本地磁盘，右键Git Bash Here进入命令行输入</p>
<p><code>npm install -g hexo-cli</code></p>
<p><code>npm install hexo-deployer-git --save</code></p>
<p>在本地磁盘下新建文件夹Hexo存放工程文件</p>
<p>初始化</p>
<p><code>hexo init Hexo</code></p>
<p>编译</p>
<p><code>hexo g</code></p>
<p>启动本地服务器进行预览</p>
<p><code>hexo s</code></p>
<p>如果hexo正常工作了，输入<a href="http://localhost:4000/">http://localhost:4000/</a> 就能看到博客的初始模样</p>
<p>另外常用的hexo命令有：</p>
<p>部署：<code>hexo d</code></p>
<p>生成并预览：<code>hexo s -g</code></p>
<p>生成并部署：<code>hexo d -g</code></p>
<p>清除缓存：<code>hexo clean</code></p>
<p>升级hexo：<code>npm update hexo -g</code></p>
<p>新建页面：<code>hexo new page &#39;PageName&#39;</code></p>
<p>新建文章：<code>hexo new &#39;PostName&#39;</code></p>
<p>如果本地预览没什么问题，那么可以试着部署到Gitee上</p>
<p>在部署前唯一要注意的是Hexo文件夹下的<code>_config.yml</code></p>
<p>repository填你刚刚创建的仓库地址</p>
<p><img src="https://i.loli.net/2020/02/26/eDGWNOSJuhA1rBd.png" alt="image-20200225133051862.png"></p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/deployment.html</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">    <span class="attr">repository:</span> <span class="string">https://gitee.com/gentletk/gentletk.git</span></span><br><span class="line">    <span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure>

<p>在你创建的仓库里点击服务，选择Gitee Pages</p>
<p><img src="https://i.loli.net/2020/02/26/4tCyHsjz3vxhbWp.png" alt="image-20200225133350133.png"></p>
<p>勾选强制使用https，部署/更新，过一会就能看到</p>
<p><img src="https://i.loli.net/2020/02/26/dJDabxZUi3k1BM2.png" alt="image-20200225133531380.png"></p>
<h2 id="2-4-更换Hexo主题并修改"><a href="#2-4-更换Hexo主题并修改" class="headerlink" title="2.4 更换Hexo主题并修改"></a>2.4 更换Hexo主题并修改</h2><p>默认的主题不够酷炫狂霸拽？<a href="https://hexo.io/themes/">来这里逛逛</a></p>
<p>我下载的是<code>Ayer</code>，这个主题看着挺干净，可以看看原作者博客。<a href="https://shen-yu.gitee.io/">点我查看</a></p>
<p>下面说说怎么更换主题。</p>
<p>还是刚刚<code>Hexo</code>下的<code>_config.yml</code>，改成这样，是不是简单到爆？</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Extensions</span></span><br><span class="line"><span class="comment">## Plugins: https://hexo.io/plugins/</span></span><br><span class="line"><span class="comment">## Themes: https://hexo.io/themes/</span></span><br><span class="line"><span class="attr">theme:</span> <span class="string">ayer</span></span><br></pre></td></tr></table></figure>

<p>改完直接来一波编译部署(部署完千万别忘了在Gitee Pages那里手动更新！！！)</p>
<p><code>hexo d -g</code></p>
<p>不知道你们的效果如何，我的反正不尽如人意，如果没达到你想要的效果，那么跟我一起来修改一下这个主题。</p>
<h3 id="2-4-1-流量与运行时间统计"><a href="#2-4-1-流量与运行时间统计" class="headerlink" title="2.4.1 流量与运行时间统计"></a>2.4.1 流量与运行时间统计</h3><p><strong>(1) cnzz流量统计</strong></p>
<p>先在<a href="https://www.umeng.com/">友盟+</a>注册个账号，选择网站统计，添加站点，填好相关信息就好</p>
<p>添加成功后会看到</p>
<p><img src="https://i.loli.net/2020/02/26/YvQFL8XiET6fmzb.png" alt="image-20200225140159338.png"></p>
<p>点击统计代码，选一个好看的样式复制</p>
<p>找到<code>Hexo/themes/ayer</code>下的<code>_config.yml</code>，开启cnzz统计：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 友盟cnzz统计(url填js代码src链接)</span></span><br><span class="line"><span class="attr">cnzz:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment">#url: </span></span><br></pre></td></tr></table></figure>

<p>在<code>Hexo/themes/ayer/layout/_partial</code>下找到<code>footer.ejs</code>中的cnzz统计，将复制的统计代码粘贴在下方：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;ul&gt;</span><br><span class="line">  &lt;li&gt;</span><br><span class="line">    &lt;% <span class="keyword">if</span> (theme.pageFooter)&#123; %&gt;</span><br><span class="line">    &lt;% <span class="keyword">var</span> hexoLink = <span class="string">&#x27;&lt;a href=&quot;https://hexo.io&quot; target=&quot;_blank&quot;&gt;Hexo&lt;/a&gt;&#x27;</span>; %&gt;</span><br><span class="line">    &lt;% <span class="keyword">var</span> themeLink = <span class="string">&#x27;&lt;a href=&quot;https://github.com/Shen-Yu/hexo-theme-ayer&quot; target=&quot;_blank&quot;&gt;Ayer&lt;/a&gt;&#x27;</span>; %&gt;</span><br><span class="line">    &lt;%- __(<span class="string">&#x27;powered_by&#x27;</span>, hexoLink) %&gt;</span><br><span class="line">    &lt;span <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;division&quot;</span>&gt;|&lt;/span&gt;</span><br><span class="line">    &lt;%- __(<span class="string">&#x27;theme&#x27;</span>, themeLink) %&gt;</span><br><span class="line">    &lt;% &#125; %&gt;</span><br><span class="line">    &lt;span <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;division&quot;</span>&gt;|&lt;/span&gt;</span><br><span class="line">    &lt;!-- cnzz统计 --&gt;</span><br><span class="line">    &lt;% <span class="keyword">if</span> (theme.cnzz&amp;&amp;theme.cnzz.enable)&#123; %&gt;</span><br><span class="line">    &lt;!-- 站长统计-[在线人数] --&gt;</span><br><span class="line">    &lt;script type=<span class="string">&quot;text/javascript&quot;</span>&gt;<span class="built_in">document</span>.write(<span class="built_in">unescape</span>(<span class="string">&quot;%3Cspan id=&#x27;cnzz_stat_icon_1278636399&#x27;%3E%3C/span%3E%3Cscript src=&#x27;https://v1.cnzz.com/z_stat.php%3Fid%3D1278636399%26online%3D2&#x27; type=&#x27;text/javascript&#x27;%3E%3C/script%3E&quot;</span>));&lt;/script&gt;</span><br><span class="line">    &lt;% &#125; %&gt;</span><br><span class="line">  &lt;/li&gt;</span><br><span class="line">&lt;/ul&gt;</span><br></pre></td></tr></table></figure>

<p><strong>(2) 运行时间统计</strong></p>
<p>在<code>Hexo/theme/ayer</code>中的<code>_config.yml</code>里添加如下字段，方便计算运行时间。</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 运行时间统计 月/日/年 时/分/秒</span></span><br><span class="line"><span class="attr">runtime:</span> </span><br><span class="line">  <span class="attr">start:</span> <span class="number">02</span><span class="string">/25/2020</span> <span class="number">5</span><span class="string">:22:00</span></span><br><span class="line">  <span class="attr">tip:</span> <span class="string">本站勉强运行</span></span><br></pre></td></tr></table></figure>

<p>然后在<code>footer.ejs</code>中添加以下代码可自动计算网站运行时间：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;ul&gt;</span><br><span class="line">  &lt;li&gt;</span><br><span class="line">  &lt;!-- 运行时间统计 --&gt;</span><br><span class="line">    &lt;span id=<span class="string">&quot;runtime_span&quot;</span>&gt;&lt;/span&gt;</span><br><span class="line">    &lt;script type=<span class="string">&quot;text/javascript&quot;</span>&gt;<span class="function"><span class="keyword">function</span> <span class="title">show_runtime</span>(<span class="params"></span>)</span>&#123;<span class="built_in">window</span>.setTimeout(<span class="string">&quot;show_runtime()&quot;</span>,<span class="number">1000</span>);X=<span class="keyword">new</span> <span class="built_in">Date</span>(<span class="string">&quot;&lt;%= theme.runtime.start%&gt;&quot;</span>);</span><br><span class="line">	Y=<span class="keyword">new</span> <span class="built_in">Date</span>();T=(Y.getTime()-X.getTime());M=<span class="number">24</span>*<span class="number">60</span>*<span class="number">60</span>*<span class="number">1000</span>;</span><br><span class="line">    a=T/M;A=<span class="built_in">Math</span>.floor(a);b=(a-A)*<span class="number">24</span>;B=<span class="built_in">Math</span>.floor(b);c=(b-B)*<span class="number">60</span>;C=<span class="built_in">Math</span>.floor((b-B)*<span class="number">60</span>);D=<span class="built_in">Math</span>.floor((c-C)*<span class="number">60</span>);</span><br><span class="line">    runtime_span.innerHTML=<span class="string">&quot;&lt;%= theme.runtime.tip%&gt;: &quot;</span>+A+<span class="string">&quot;天&quot;</span>+B+<span class="string">&quot;小时&quot;</span>+C+<span class="string">&quot;分&quot;</span>+D+<span class="string">&quot;秒&quot;</span>&#125;show_runtime();&lt;/script&gt;</span><br><span class="line">  &lt;/li&gt;</span><br><span class="line">&lt;/ul&gt;</span><br></pre></td></tr></table></figure>

<h3 id="2-4-2评论系统"><a href="#2-4-2评论系统" class="headerlink" title="2.4.2评论系统"></a>2.4.2评论系统</h3><p>我用的是<code>Valine + leancloud</code></p>
<p>先在LeanCloud创建个应用，<a href="https://www.leancloud.cn/">点我去创建</a></p>
<p>在创建好的应用中找到应用keys</p>
<p><img src="https://i.loli.net/2020/02/26/mYcxoWD2EkdMLSF.png" alt="image-20200225141755409.png"></p>
<p>在<code>Hexo/themes/ayer</code>下的<code>_config.yml</code>中找到leancloud</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Valine [一款快速、简洁且高效的无后端评论系统] (https://github.com/xCss/Valine)</span></span><br><span class="line"><span class="comment"># 启用Valine必须先创建leancloud应用， 获取 id|key 填入即可</span></span><br><span class="line"><span class="attr">leancloud:</span>  </span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">app_id:</span> <span class="string">your</span> <span class="string">app_id</span></span><br><span class="line">  <span class="attr">app_key:</span> <span class="string">your</span> <span class="string">app_key</span></span><br></pre></td></tr></table></figure>

<p>在valine官方文档中发现还可以增加其他配置项，如允许获取QQ头像并自动补全邮箱和文章阅读量统计：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Valine配置</span></span><br><span class="line"><span class="attr">valine:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span>                        <span class="comment"># 是否启用</span></span><br><span class="line">  <span class="attr">avatar:</span> <span class="string">monsterid</span>                   <span class="comment"># 头像样式(https://valine.js.org/avatar.html)</span></span><br><span class="line">  <span class="attr">placeholder:</span> <span class="string">建议使用QQ邮箱~</span>          <span class="comment"># placeholder</span></span><br><span class="line">  <span class="attr">enableQQ:</span> <span class="literal">true</span>                      <span class="comment"># 允许获取QQ头像</span></span><br><span class="line">  <span class="attr">visitor:</span> <span class="literal">true</span>                       <span class="comment"># 阅读量</span></span><br></pre></td></tr></table></figure>

<p>在<code>Hexo/themes/ayer/layout/_partial/post</code>下的<code>valine.ejs</code>中增加如下配置：</p>
<p>其中meta字段设置成只填写昵称与邮箱，必填字段也设置成昵称与邮箱：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">  <span class="keyword">new</span> Valine(&#123;</span><br><span class="line">    el: <span class="string">&quot;#vcomments&quot;</span>,</span><br><span class="line">    app_id: <span class="string">&quot;&lt;%- theme.leancloud.app_id %&gt;&quot;</span>,</span><br><span class="line">    app_key: <span class="string">&quot;&lt;%- theme.leancloud.app_key %&gt;&quot;</span>,</span><br><span class="line">    path: <span class="built_in">window</span>.location.pathname,</span><br><span class="line">    avatar: <span class="string">&quot;&lt;%- theme.valine.avatar %&gt;&quot;</span>,</span><br><span class="line">    placeholder: <span class="string">&quot;&lt;%- theme.valine.placeholder %&gt;&quot;</span>,</span><br><span class="line">    recordIP: <span class="literal">true</span>,</span><br><span class="line">	meta: [<span class="string">&#x27;nick&#x27;</span>,<span class="string">&#x27;mail&#x27;</span>],</span><br><span class="line">	enableQQ: <span class="string">&quot;&lt;%- theme.valine.enableQQ %&gt;&quot;</span>,</span><br><span class="line">	requiredFields: [<span class="string">&#x27;nick&#x27;</span>, <span class="string">&#x27;mail&#x27;</span>],</span><br><span class="line">	visitor: <span class="string">&quot;&lt;%- theme.valine.visitor %&gt;&quot;</span>,</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">const</span> infoEle = <span class="built_in">document</span>.querySelector(<span class="string">&quot;#vcomments .info&quot;</span>);</span><br><span class="line">  <span class="keyword">if</span> (infoEle &amp;&amp; infoEle.childNodes &amp;&amp; infoEle.childNodes.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">    infoEle.childNodes.forEach(<span class="function"><span class="keyword">function</span> (<span class="params">item</span>) </span>&#123;</span><br><span class="line">      item.parentNode.removeChild(item);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<p>其中文章阅读量统计还需要在<code>Hexo/themes/ayer/layout/_partial/post</code>下的<code>word.ejs</code>中添加如下配置：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;% <span class="keyword">if</span> (!theme.word_count.only_article_visit || (!index &amp;&amp; theme.word_count.only_article_visit))&#123; %&gt;</span><br><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;word_count&quot;</span>&gt;</span><br><span class="line">  &lt;!--字数统计--&gt;</span><br><span class="line">  &lt;span <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;post-time&quot;</span>&gt;</span><br><span class="line">    &lt;span <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;post-meta-item-icon&quot;</span>&gt;</span><br><span class="line">      &lt;i <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;ri-quill-pen-line&quot;</span>&gt;&lt;/i&gt;</span><br><span class="line">      &lt;span <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;post-meta-item-text&quot;</span>&gt; &lt;%= __(<span class="string">&#x27;post.word_count&#x27;</span>) %&gt;:  &lt;/span&gt;</span><br><span class="line">      &lt;span <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;post-count&quot;</span>&gt;&lt;%= wordcount(post.content) %&gt;&lt;/span&gt;</span><br><span class="line">    &lt;/span&gt;</span><br><span class="line">  &lt;/span&gt;</span><br><span class="line">  &lt;!--阅读时间统计--&gt;</span><br><span class="line">  &lt;span <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;post-time&quot;</span>&gt;</span><br><span class="line">    &amp;nbsp; | &amp;nbsp;</span><br><span class="line">    &lt;span <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;post-meta-item-icon&quot;</span>&gt;</span><br><span class="line">      &lt;i <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;ri-book-open-line&quot;</span>&gt;&lt;/i&gt;</span><br><span class="line">      &lt;span <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;post-meta-item-text&quot;</span>&gt; &lt;%= __(<span class="string">&#x27;post.read_time&#x27;</span>) %&gt;≈&lt;/span&gt;</span><br><span class="line">      &lt;span <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;post-count&quot;</span>&gt;&lt;%= min2read(post.content) %&gt; &lt;%= __(<span class="string">&#x27;post.minutes&#x27;</span>) %&gt;&lt;/span&gt;</span><br><span class="line">    &lt;/span&gt;</span><br><span class="line">  &lt;/span&gt;</span><br><span class="line">  &lt;!--阅读次数统计--&gt;</span><br><span class="line">  &lt;span id=<span class="string">&#x27;/&lt;%= page.path %&gt;&#x27;</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;leancloud-visitors&quot;</span> data-flag-title=<span class="string">&quot;&lt;%= page.title %&gt;&quot;</span>&gt;</span><br><span class="line">    &amp;nbsp; | &amp;nbsp;</span><br><span class="line">    &lt;span <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;post-meta-item-icon&quot;</span>&gt;</span><br><span class="line">    &lt;i <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;ri-eye-line&quot;</span>&gt;&lt;/i&gt;</span><br><span class="line">      &lt;span <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;post-meta-item-text&quot;</span>&gt;阅读次数:&lt;/span&gt;</span><br><span class="line">    &lt;i <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;leancloud-visitors-count&quot;</span>&gt;&lt;/i&gt;</span><br><span class="line">  &lt;/span&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure>

<h3 id="2-4-3封面更改与打赏功能"><a href="#2-4-3封面更改与打赏功能" class="headerlink" title="2.4.3封面更改与打赏功能"></a>2.4.3封面更改与打赏功能</h3><p>如果你对封面的图片不满意，也可以在images下添加你自己喜欢的图片</p>
<p>在<code>Hexo/themes/ayer</code>下的<code>_config.yml</code>里替换成你喜欢的图片名称</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 封面配置</span></span><br><span class="line"><span class="comment"># enable-是否启用封面；path-封面背景图；logo-封面logo</span></span><br><span class="line"><span class="attr">cover:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">/images/cover1.jpg</span> <span class="comment"># images目录下附送多张美图，可更换</span></span><br><span class="line">  <span class="attr">logo:</span> <span class="string">/images/ayer.svg</span>   <span class="comment"># 如果不要直接设置成false</span></span><br></pre></td></tr></table></figure>

<p>在<code>Hexo/themes/ayer/source/images</code>下将alipay.jpg与wechat.jpg替换成你自己的收款二维码</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 打赏</span></span><br><span class="line"><span class="comment"># 打赏type设定：0-关闭打赏； 1-文章对应的md文件里有reward:true属性，才有打赏； 2-所有文章均有打赏</span></span><br><span class="line"><span class="attr">reward_type:</span> <span class="number">2</span></span><br><span class="line"><span class="comment"># 打赏wording</span></span><br><span class="line"><span class="attr">reward_wording:</span> <span class="string">&quot;请我喝杯咖啡吧~&quot;</span></span><br><span class="line"><span class="comment"># 支付宝二维码图片地址，跟你设置logo的方式一样。比如：/images/alipay.jpg</span></span><br><span class="line"><span class="attr">alipay:</span> <span class="string">/images/alipay.jpg</span></span><br><span class="line"><span class="comment"># 微信二维码图片地址</span></span><br><span class="line"><span class="attr">weixin:</span> <span class="string">/images/wechat.jpg</span></span><br></pre></td></tr></table></figure>

<h1 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h1><p>配置到这里基本就结束了，如果你还想要其他的配置，方法也是大同小异，看你怎么折腾了，欢迎留言评论！</p>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>技术</tag>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>基于jsDelivr+GitHub的免费CDN</title>
    <url>/2020/04/19/%E5%9F%BA%E4%BA%8EjsDelivr+GitHub%E7%9A%84%E5%85%8D%E8%B4%B9CDN/</url>
    <content><![CDATA[<h2 id="1-什么是CDN？"><a href="#1-什么是CDN？" class="headerlink" title="1 什么是CDN？"></a>1 什么是CDN？</h2><p><code>CDN(Content Delivery  Network，即内容分发网络)</code>，是构建在网络之上的内容分发网络，依靠部署在各地的边缘服务器，通过中心平台的负载均衡、内容分发、调度等功能模块，使用户就近获取所需内容，降低网络拥塞，提高用户访问响应速度和命中率。而<code>jsDelivr</code>是一个免费、开放原始码的公有<code> CDN</code> 服务，总的来说，<code>jsDelivr</code> + <code>GitHub</code>是免费且好用的<code>CDN</code>服务，非常适合博客网站使用。</p>
<h2 id="2-创建cdn-assets仓库"><a href="#2-创建cdn-assets仓库" class="headerlink" title="2 创建cdn-assets仓库"></a>2 创建cdn-assets仓库</h2><p>登陆你的<a href="https://www.github.com/">GitHub</a>，创建一个名为<code>cdn-assets</code>的<code>公有仓库</code>用于存放你的静态资源文件。</p>
<p><img src="https://i.loli.net/2021/04/27/IQl75DGzUwhXtoJ.png" alt="image-20210427173025722"></p>
<p>复制红框中的仓库地址，然后克隆到本地：</p>
<p><img src="https://i.loli.net/2021/04/27/9lUzEBdCKLAj56F.png" alt="image-20210427173234061"></p>
<p><img src="https://i.loli.net/2021/04/27/i2Jt5wgfre1hUFj.png" alt="image-20210427173334658"></p>
<h2 id="3-提交并推送到GitHub"><a href="#3-提交并推送到GitHub" class="headerlink" title="3 提交并推送到GitHub"></a>3 提交并推送到GitHub</h2><p>在本地文件夹<code>cdn-assets</code>中添加你的静态资源文件，然后提交并推送到GitHub：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 添加文件</span></span><br><span class="line">git add .</span><br><span class="line"><span class="comment"># 提交文件</span></span><br><span class="line">git commit -m <span class="string">&quot;add cdn source files.&quot;</span></span><br><span class="line"><span class="comment"># 推送到远程仓库</span></span><br><span class="line">git push origin master</span><br></pre></td></tr></table></figure>

<p><img src="https://i.loli.net/2021/04/27/RolDteAfWsUTCzy.png" alt="image-20210427173516617"></p>
<h2 id="4-发布cdn-assets版本"><a href="#4-发布cdn-assets版本" class="headerlink" title="4 发布cdn-assets版本"></a>4 发布cdn-assets版本</h2><p>点击<code>Create a new release</code>，创建一个<code>cdn-assets</code>的发布版本：</p>
<p><img src="https://i.loli.net/2021/04/27/8S6KcLkfHqQstI9.png" alt="image-20210427173607514"></p>
<p>点击<code>Punlish release</code>进行发布：</p>
<p><img src="https://i.loli.net/2021/04/27/cuamzEKbwksPMSW.png" alt="image-20210427173703992"></p>
<h2 id="5-访问静态资源"><a href="#5-访问静态资源" class="headerlink" title="5 访问静态资源"></a>5 访问静态资源</h2><ol>
<li><p>获取指定版本的资源</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">https://cdn.jsdelivr.net/gh/GitHub用户名/仓库名@版本号/文件路径</span><br></pre></td></tr></table></figure>

<p>以访问<code>emoji</code>表情包为例：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">https://cdn.jsdelivr.net/gh/GentleTK/cdn-assets@1.0.0/emoji/qq/qq-105.gif</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.jsdelivr.net/gh/GentleTK/cdn-assets@1.0.0/emoji/qq/qq-105.gif" alt="qq-105.gif"></p>
</li>
<li><p>获取最新版本的资源</p>
<div class="note warning flat"><p><code>@latest</code>也可不加，同样表示获取最新版本的资源。</p>
</div>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">https://cdn.jsdelivr.net/gh/GitHub用户名/仓库名@latest/文件路径</span><br></pre></td></tr></table></figure>

<p>以访问<code>emoji</code>表情包为例：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">https://cdn.jsdelivr.net/gh/GentleTK/cdn-assets@latest/emoji/qq/qq-105.gif</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.jsdelivr.net/gh/GentleTK/cdn-assets@latest/emoji/qq/qq-105.gif" alt="qq-105.gif"></p>
</li>
</ol>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>技术</tag>
        <tag>GitHub</tag>
        <tag>jsDelivr</tag>
      </tags>
  </entry>
  <entry>
    <title>基于树莓派的智能箱包开发环境搭建</title>
    <url>/2020/03/08/%E5%9F%BA%E4%BA%8E%E6%A0%91%E8%8E%93%E6%B4%BE%E7%9A%84%E6%99%BA%E8%83%BD%E7%AE%B1%E5%8C%85%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</url>
    <content><![CDATA[<h1 id="1-换源，更新"><a href="#1-换源，更新" class="headerlink" title="1.换源，更新"></a>1.换源，更新</h1><h2 id="1-1编辑软件源文件"><a href="#1-1编辑软件源文件" class="headerlink" title="1.1编辑软件源文件"></a>1.1编辑软件源文件</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 编辑source.list文件</span></span><br><span class="line">sudo nano /etc/apt/source.list</span><br></pre></td></tr></table></figure>

<p>替换内容为：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 清华源</span></span><br><span class="line">deb http://mirrors.ustc.edu.cn/raspbian/raspbian/ stretch main contrib non-free</span><br><span class="line">deb-src http://mirrors.ustc.edu.cn/raspbian/raspbian/ stretch main contrib non-free</span><br></pre></td></tr></table></figure>

<h2 id="1-2编辑系统更新源文件"><a href="#1-2编辑系统更新源文件" class="headerlink" title="1.2编辑系统更新源文件"></a>1.2编辑系统更新源文件</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 编辑raspi.list文件</span></span><br><span class="line">sudo nano /etc/apt/sources.list.d/raspi.list</span><br></pre></td></tr></table></figure>

<p>替换内容为:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 清华源</span></span><br><span class="line">deb http://mirrors.ustc.edu.cn/archive.raspberrypi.org/debian/ stretch main ui</span><br></pre></td></tr></table></figure>

<h1 id="2-安装输入法"><a href="#2-安装输入法" class="headerlink" title="2.安装输入法"></a>2.安装输入法</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get install fcitx fcitx-googlepinyin fcitx-module-cloudpinyin fcitx-sunpinyin</span><br></pre></td></tr></table></figure>

<p>安装完毕，重启树莓派</p>
<h1 id="3-安装pybluez"><a href="#3-安装pybluez" class="headerlink" title="3.安装pybluez"></a>3.安装pybluez</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 克隆项目</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/karulis/pybluez</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置项目</span></span><br><span class="line">sudo python setup.py build</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装plbluez</span></span><br><span class="line">sudo python setup.py install</span><br></pre></td></tr></table></figure>

<h1 id="4-安装GPS库"><a href="#4-安装GPS库" class="headerlink" title="4.安装GPS库"></a>4.安装GPS库</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安装gps相关库</span></span><br><span class="line">sudo apt-get install gpsd gpsd-clients python-gps</span><br></pre></td></tr></table></figure>

<h1 id="5-安装yagmail"><a href="#5-安装yagmail" class="headerlink" title="5.安装yagmail"></a>5.安装yagmail</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安装yagmail</span></span><br><span class="line">pip install yagmail</span><br></pre></td></tr></table></figure>
<h1 id="6-安装蓝牙驱动与A2DP支持"><a href="#6-安装蓝牙驱动与A2DP支持" class="headerlink" title="6.安装蓝牙驱动与A2DP支持"></a>6.安装蓝牙驱动与A2DP支持</h1><h2 id="6-1蓝牙驱动"><a href="#6-1蓝牙驱动" class="headerlink" title="6.1蓝牙驱动"></a>6.1蓝牙驱动</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安装蓝牙驱动及配置相关</span></span><br><span class="line">sudo apt-get install pi-bluetooth bluez bluez-firmware blueman</span><br><span class="line">sudo usermod -G bluetooth -a pi</span><br><span class="line">sudo systemctl start bluetooth</span><br><span class="line">sudo reboot</span><br></pre></td></tr></table></figure>

<h2 id="6-2A2DP支持"><a href="#6-2A2DP支持" class="headerlink" title="6.2A2DP支持"></a>6.2A2DP支持</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 克隆仓库</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/bareinhard/super-simple-raspberry-pi-audio-receiver-install</span><br><span class="line"></span><br><span class="line"><span class="comment"># 打开对应目录</span></span><br><span class="line"><span class="built_in">cd</span> super-simple-raspberry-pi-audio-receiver-install</span><br><span class="line"></span><br><span class="line"><span class="comment"># 切换分支</span></span><br><span class="line">git checkout stretch-fix</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行安装脚本</span></span><br><span class="line">sudo ./install.sh</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ol>
<li>Car和Home，我选的Home </li>
<li>Device name和AirPlay Device Name，写PiMusic </li>
<li>密码，不输入 </li>
<li>Do you want all the Devices to use the same name? (y/n) : Choose y or n，选n</li>
<li>Which Sound Card are you using? (0/1/2/3/4/5/6/7/8/9/10/11)，写0</li>
</ol>
<h1 id="7-安装Webiopi"><a href="#7-安装Webiopi" class="headerlink" title="7.安装Webiopi"></a>7.安装Webiopi</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 克隆仓库</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/thortex/rpi3-webiopi</span><br><span class="line"></span><br><span class="line"><span class="comment"># 打开对应目录</span></span><br><span class="line"><span class="built_in">cd</span> rpi3-webiopi/webiopi_0.7.1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行配置脚本</span></span><br><span class="line">sudo ./setup.sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改密码</span></span><br><span class="line">sudo webiopi-passwd</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动webiopi</span></span><br><span class="line">sudo webiopi 8000</span><br><span class="line"></span><br><span class="line"><span class="comment"># 让webopio后台运行，否则按ctarl+c就会断掉</span></span><br><span class="line">sudo /etc/init.d/webiopi start</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置webopio随系统启动</span></span><br><span class="line">sudo update-rc.d webiopi defaults</span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th align="left">登陆网址</th>
<th align="left">用户名</th>
<th align="left">默认密码</th>
</tr>
</thead>
<tbody><tr>
<td align="left">树莓派IP:8000</td>
<td align="left">webiopi</td>
<td align="left">raspberry</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>树莓派</tag>
      </tags>
  </entry>
  <entry>
    <title>butterfly主题安装</title>
    <url>/2020/03/01/butterfly%E4%B8%BB%E9%A2%98%E5%AE%89%E8%A3%85/</url>
    <content><![CDATA[<h2 id="1-安装butterfly"><a href="#1-安装butterfly" class="headerlink" title="1 安装butterfly"></a>1 安装butterfly</h2><div class="tabs" id=""><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#-1">Git安装butterfly</button></li><li class="tab"><button type="button" data-href="#-2">Gitee安装butterfly</button></li><li class="tab"><button type="button" data-href="#-3">npm安装butterfly</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="-1"><p>鼠标右键单击选择Git Bash，打开终端，在博客根目录下输入以下命令进行安装：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> -b master https://github.com/jerryc127/hexo-theme-butterfly.git themes/butterfly</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="-2"><p>鼠标右键单击选择Git Bash，打开终端，在博客根目录下输入以下命令进行安装：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> -b master https://gitee.com/iamjerryw/hexo-theme-butterfly.git themes/butterfly</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="-3"><div class="note warning flat"><p>Hexo版本必须在5.0.0以上!</p>
</div>
鼠标右键单击选择Git Bash，打开终端，在博客根目录下输入以下命令进行安装：
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm i hexo-theme-butterfly</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>

<h2 id="2-应用butterfly"><a href="#2-应用butterfly" class="headerlink" title="2 应用butterfly"></a>2 应用butterfly</h2><p>在博客根目录下修改站点配置文件<code>_config.yml</code>，将主题应用为<code>butterfly</code>：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Extensions</span></span><br><span class="line"><span class="comment">## Plugins: https://hexo.io/plugins/</span></span><br><span class="line"><span class="comment">## Themes: https://hexo.io/themes/</span></span><br><span class="line">theme: butterfly</span><br></pre></td></tr></table></figure>

<h2 id="3-安装插件"><a href="#3-安装插件" class="headerlink" title="3 安装插件"></a>3 安装插件</h2><p><code>butterfly</code>主题需要<code>pug</code>及<code>stylus</code>的渲染器，打开终端，在博客根目录下输入以下命令进行安装：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-renderer-pug hexo-renderer-stylus --save</span><br></pre></td></tr></table></figure>

<h2 id="4-配置模板"><a href="#4-配置模板" class="headerlink" title="4 配置模板"></a>4 配置模板</h2><p>在博客根目录下打开<code>scaffolds</code>文件夹，对<code>page.md</code>和<code>post.md</code>文件进行修改。</p>
<p>修改<code>page.md</code>文件如下：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title:</span><br><span class="line">date:</span><br><span class="line">updated:</span><br><span class="line">type:</span><br><span class="line">comments:</span><br><span class="line">description:</span><br><span class="line">keywords:</span><br><span class="line">top<span class="emphasis">_img:</span></span><br><span class="line"><span class="emphasis">mathjax:</span></span><br><span class="line"><span class="emphasis">katex:</span></span><br><span class="line"><span class="emphasis">aside:</span></span><br><span class="line"><span class="emphasis">aplayer: </span></span><br><span class="line"><span class="emphasis">highlight_</span>shrink:</span><br><span class="line">---</span><br></pre></td></tr></table></figure>

<p><code>page.md</code>各参数描述如下所示：</p>
<table>
<thead>
<tr>
<th align="left">参数</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left">title</td>
<td align="left">页面标题</td>
</tr>
<tr>
<td align="left">date</td>
<td align="left">创建日期</td>
</tr>
<tr>
<td align="left">updated</td>
<td align="left">更新日期</td>
</tr>
<tr>
<td align="left">type</td>
<td align="left">类型，如标签(tag)、分类(categories)、友情链接(link)</td>
</tr>
<tr>
<td align="left">comments</td>
<td align="left">显示页面评论，默认显示</td>
</tr>
<tr>
<td align="left">description</td>
<td align="left">页面描述</td>
</tr>
<tr>
<td align="left">keywords</td>
<td align="left">页面关键字</td>
</tr>
<tr>
<td align="left">top_img</td>
<td align="left">页面顶部图</td>
</tr>
<tr>
<td align="left">mathjax</td>
<td align="left">数学公式mathjax</td>
</tr>
<tr>
<td align="left">katex</td>
<td align="left">数学公式katex</td>
</tr>
<tr>
<td align="left">aside</td>
<td align="left">侧边栏</td>
</tr>
<tr>
<td align="left">aplayer</td>
<td align="left">音乐播放器</td>
</tr>
<tr>
<td align="left">highlight_shrink</td>
<td align="left">代码块是否展开</td>
</tr>
</tbody></table>
<p>修改<code>post.md</code>文件如下：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: &#123;&#123;title&#125;&#125;</span><br><span class="line">date: &#123;&#123;date&#125;&#125;</span><br><span class="line">updated:</span><br><span class="line">tags:</span><br><span class="line">categories:</span><br><span class="line">keywords:</span><br><span class="line">description:</span><br><span class="line">top<span class="emphasis">_img:</span></span><br><span class="line"><span class="emphasis">comments:</span></span><br><span class="line"><span class="emphasis">cover:</span></span><br><span class="line"><span class="emphasis">toc:</span></span><br><span class="line"><span class="emphasis">toc_</span>number:</span><br><span class="line">copyright:</span><br><span class="line">copyright<span class="emphasis">_author:</span></span><br><span class="line"><span class="emphasis">copyright_</span>author<span class="emphasis">_href:</span></span><br><span class="line"><span class="emphasis">copyright_</span>url:</span><br><span class="line">copyright<span class="emphasis">_info:</span></span><br><span class="line"><span class="emphasis">mathjax:</span></span><br><span class="line"><span class="emphasis">katex:</span></span><br><span class="line"><span class="emphasis">aplayer: </span></span><br><span class="line"><span class="emphasis">highlight_</span>shrink:</span><br><span class="line">aside:</span><br><span class="line">---</span><br></pre></td></tr></table></figure>

<p><code>post.md</code>各参数描述如下所示：</p>
<table>
<thead>
<tr>
<th align="left">参数</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left">title</td>
<td align="left">文章标题</td>
</tr>
<tr>
<td align="left">date</td>
<td align="left">创建日期</td>
</tr>
<tr>
<td align="left">updated</td>
<td align="left">更新日期</td>
</tr>
<tr>
<td align="left">tags</td>
<td align="left">标签，如[‘技术’,’Hexo’]</td>
</tr>
<tr>
<td align="left">categories</td>
<td align="left">分类，如技术</td>
</tr>
<tr>
<td align="left">keywords</td>
<td align="left">文章关键字</td>
</tr>
<tr>
<td align="left">description</td>
<td align="left">文章描述</td>
</tr>
<tr>
<td align="left">top_img</td>
<td align="left">文章顶部图</td>
</tr>
<tr>
<td align="left">cover</td>
<td align="left">文章缩略图</td>
</tr>
<tr>
<td align="left">comments</td>
<td align="left">显示文章评论，默认显示</td>
</tr>
<tr>
<td align="left">toc</td>
<td align="left">显示目录</td>
</tr>
<tr>
<td align="left">toc_number</td>
<td align="left">显示目录标题序号</td>
</tr>
<tr>
<td align="left">copyright</td>
<td align="left">显示版权</td>
</tr>
<tr>
<td align="left">copyright_author</td>
<td align="left">文章作者</td>
</tr>
<tr>
<td align="left">copyright_author_href</td>
<td align="left">文章作者链接</td>
</tr>
<tr>
<td align="left">copyright_url</td>
<td align="left">文章链接</td>
</tr>
<tr>
<td align="left">copyright_info</td>
<td align="left">版权声明文字</td>
</tr>
<tr>
<td align="left">mathjax</td>
<td align="left">数学公式mathjax</td>
</tr>
<tr>
<td align="left">katex</td>
<td align="left">数学公式katex</td>
</tr>
<tr>
<td align="left">aside</td>
<td align="left">侧边栏</td>
</tr>
<tr>
<td align="left">aplayer</td>
<td align="left">音乐播放器</td>
</tr>
<tr>
<td align="left">highlight_shrink</td>
<td align="left">代码块是否展开</td>
</tr>
</tbody></table>
<h2 id="5-主题配置"><a href="#5-主题配置" class="headerlink" title="5 主题配置"></a>5 主题配置</h2><h3 id="5-1-导航目录配置"><a href="#5-1-导航目录配置" class="headerlink" title="5.1 导航目录配置"></a>5.1 导航目录配置</h3><h4 id="5-1-1-创建导航目录页面"><a href="#5-1-1-创建导航目录页面" class="headerlink" title="5.1.1 创建导航目录页面"></a>5.1.1 创建导航目录页面</h4><div class="tabs" id=""><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#-1">创建归档页面</button></li><li class="tab"><button type="button" data-href="#-2">创建标签页面</button></li><li class="tab"><button type="button" data-href="#-3">创建分类页面</button></li><li class="tab"><button type="button" data-href="#-4">创建友情链接页面</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="-1"><p>鼠标右键单击选择Git Bash，打开终端，在博客根目录下输入以下命令创建归档页面：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo new page archives</span><br></pre></td></tr></table></figure>
<p>对博客根目录<code>source/archives</code>下的<code>index.md</code>文件进行如下修改：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: 归档</span><br><span class="line">date: 2021-04-01 17:31:05</span><br><span class="line">type: &quot;archives&quot;</span><br><span class="line">top<span class="emphasis">_img: https://cdn.jsdelivr.net/gh/GentleTK/cdn-source@latest/cover/cover1.jpg</span></span><br><span class="line"><span class="emphasis">---</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="-2"><p>鼠标右键单击选择Git Bash，打开终端，在博客根目录下输入以下命令创建标签页面：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo new page tags</span><br></pre></td></tr></table></figure>
<p>对博客根目录<code>source/tags</code>下的<code>index.md</code>文件进行如下修改：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: 标签</span><br><span class="line">date: 2021-04-01 17:31:05</span><br><span class="line">type: &quot;tags&quot;</span><br><span class="line">top<span class="emphasis">_img: https://cdn.jsdelivr.net/gh/GentleTK/cdn-source@latest/cover/cover1.jpg</span></span><br><span class="line"><span class="emphasis">---</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="-3"><p>鼠标右键单击选择Git Bash，打开终端，在博客根目录下输入以下命令创建分类页面：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo new page categories</span><br></pre></td></tr></table></figure>
<p>对博客根目录<code>source/categories</code>下的<code>index.md</code>文件进行如下修改：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: 分类</span><br><span class="line">date: 2021-04-01 17:30:53</span><br><span class="line">type: &quot;categories&quot;</span><br><span class="line">top<span class="emphasis">_img: https://cdn.jsdelivr.net/gh/GentleTK/cdn-source@latest/cover/cover1.jpg</span></span><br><span class="line"><span class="emphasis">---</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="-4"><p>鼠标右键单击选择Git Bash，打开终端，在博客根目录下输入以下命令创建友情链接页面：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo new page link</span><br></pre></td></tr></table></figure>
<p>对博客根目录<code>source/link</code>下的<code>index.md</code>文件进行如下修改：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: 友情链接</span><br><span class="line">date: 2021-04-06 09:48:00</span><br><span class="line">type: &quot;link&quot;</span><br><span class="line">top<span class="emphasis">_img: https://cdn.jsdelivr.net/gh/GentleTK/cdn-source@latest/cover/cover1.jpg</span></span><br><span class="line"><span class="emphasis">---</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>

<h4 id="5-1-2-配置导航目录页面"><a href="#5-1-2-配置导航目录页面" class="headerlink" title="5.1.2 配置导航目录页面"></a>5.1.2 配置导航目录页面</h4><p>对博客根目录下<code>themes</code>下的<code>_config.yml</code>进行编辑，设置导航目录如下：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 导航目录设置</span></span><br><span class="line"><span class="comment"># 格式: name: link || icon</span></span><br><span class="line"><span class="comment"># 子菜单</span></span><br><span class="line"><span class="comment"># name || icon:</span></span><br><span class="line"><span class="comment">#   name || link || icon</span></span><br><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="string">主页:</span> <span class="string">/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-home</span></span><br><span class="line">  <span class="string">归档:</span> <span class="string">/archives</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-archive</span></span><br><span class="line">  <span class="string">标签:</span> <span class="string">/tags</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-tags</span></span><br><span class="line">  <span class="string">分类:</span> <span class="string">/categories</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-folder-open</span></span><br><span class="line">  <span class="string">友情链接:</span> <span class="string">/link</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-link</span></span><br></pre></td></tr></table></figure>

<h3 id="5-2-代码块配置"><a href="#5-2-代码块配置" class="headerlink" title="5.2 代码块配置"></a>5.2 代码块配置</h3><p>对博客根目录下<code>themes</code>下的<code>_config.yml</code>进行编辑，设置代码块如下：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 代码块设置</span></span><br><span class="line"><span class="attr">highlight_theme:</span> <span class="string">mac</span>          <span class="comment"># darker / pale night / light / ocean / mac / mac light / false</span></span><br><span class="line"><span class="attr">highlight_copy:</span> <span class="literal">true</span>          <span class="comment"># 复制代码按钮</span></span><br><span class="line"><span class="attr">highlight_lang:</span> <span class="literal">true</span>          <span class="comment"># 显示代码语言</span></span><br><span class="line"><span class="attr">highlight_shrink:</span> <span class="literal">false</span>       <span class="comment"># true: 默认折叠代码  false: 默认展开代码  none: 展开代码并隐藏展开按钮</span></span><br><span class="line"><span class="attr">highlight_height_limit:</span> <span class="literal">false</span> <span class="comment"># 代码高度：px</span></span><br><span class="line"><span class="attr">code_word_wrap:</span> <span class="literal">false</span>         <span class="comment"># true: 代码自动换行(无滚动条)</span></span><br></pre></td></tr></table></figure>

<h3 id="5-3-复制配置"><a href="#5-3-复制配置" class="headerlink" title="5.3 复制配置"></a>5.3 复制配置</h3><p>对博客根目录下<code>themes</code>下的<code>_config.yml</code>进行编辑，设置复制如下：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 复制设置</span></span><br><span class="line"><span class="attr">copy:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span>      <span class="comment"># 开启复制设置</span></span><br><span class="line">  <span class="attr">copyright:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span>    <span class="comment"># 复制内容后加上版权信息</span></span><br><span class="line">    <span class="attr">limit_count:</span> <span class="number">50</span> <span class="comment"># 复制字数限制(超过限制就会加上版权信息)</span></span><br></pre></td></tr></table></figure>

<h3 id="5-4-社交图标配置"><a href="#5-4-社交图标配置" class="headerlink" title="5.4 社交图标配置"></a>5.4 社交图标配置</h3><p>对博客根目录下<code>themes</code>下的<code>_config.yml</code>进行编辑，设置社交图标如下：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 社交图标设置</span></span><br><span class="line"><span class="comment"># 格式:</span></span><br><span class="line"><span class="comment">#   icon: link || the description</span></span><br><span class="line"><span class="attr">social:</span></span><br><span class="line">  <span class="attr">fab fa-github:</span> <span class="string">https://github.com/YourGitHubUserName</span> <span class="string">||</span> <span class="string">Github</span></span><br><span class="line">  <span class="attr">fab fa-qq:</span> <span class="string">http://wpa.qq.com/msgrd?v=3&amp;uin=YourQQNumber&amp;site=qq&amp;menu=yes</span> <span class="string">||</span> <span class="string">QQ</span></span><br><span class="line">  <span class="attr">fab fa-weixin:</span> <span class="string">https://cdn.jsdelivr.net/gh/GentleTK/cdn-source@latest/qrcode/weixin.jpg</span> <span class="string">||</span> <span class="string">WeChat</span></span><br><span class="line">  <span class="attr">fas fa-envelope:</span> <span class="string">mailto:YourEmailAddress</span> <span class="string">||</span> <span class="string">Email</span></span><br><span class="line">  <span class="attr">fas fa-rss:</span> <span class="string">/atom.xml</span></span><br></pre></td></tr></table></figure>

<div class="note info flat"><p>订阅需要安装安装<code>hexo-generator-feed</code>插件。</p>
</div>

<p>鼠标右键单击选择Git Bash，打开终端，在博客根目录下输入以下命令安装订阅插件：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-feed --save</span><br></pre></td></tr></table></figure>

<p>安装完成后，对博客根目录下的<code>_config.yml</code>进行修改，添加如下配置：</p>
<div class="note warning flat"><p>注意，是博客根目录下的<code>_config.yml</code>!</p>
</div>

<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 订阅</span></span><br><span class="line"><span class="attr">feed:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">atom</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">atom.xml</span></span><br><span class="line">    <span class="attr">limit:</span> <span class="number">20</span></span><br></pre></td></tr></table></figure>

<h3 id="5-5-本地搜索配置"><a href="#5-5-本地搜索配置" class="headerlink" title="5.5 本地搜索配置"></a>5.5 本地搜索配置</h3><p>鼠标右键单击选择Git Bash，打开终端，在博客根目录下输入以下命令安装本地搜索插件：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure>

<p>安装完成后，对博客根目录下的<code>_config.yml</code>进行修改，添加如下配置：</p>
<div class="note warning flat"><p>注意，是博客根目录下的<code>_config.yml</code>!</p>
</div>

<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 本地搜索</span></span><br><span class="line"><span class="attr">search:</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">search.xml</span></span><br><span class="line">    <span class="attr">field:</span> <span class="string">post</span></span><br><span class="line">    <span class="attr">format:</span> <span class="string">html</span></span><br></pre></td></tr></table></figure>

<h3 id="5-6-字数统计配置"><a href="#5-6-字数统计配置" class="headerlink" title="5.6 字数统计配置"></a>5.6 字数统计配置</h3><p>鼠标右键单击选择Git Bash，打开终端，在博客根目录下输入以下命令安装字数统计插件：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-wordcount --save</span><br></pre></td></tr></table></figure>

<p>安装完成后，对博客根目录下<code>themes</code>下的<code>_config.yml</code>进行编辑，设置字数统计如下：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 字数统计</span></span><br><span class="line"><span class="attr">wordcount:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">post_wordcount:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">min2read:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">total_wordcount:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<h3 id="5-7-文章过期提醒配置"><a href="#5-7-文章过期提醒配置" class="headerlink" title="5.7 文章过期提醒配置"></a>5.7 文章过期提醒配置</h3><p>对博客根目录下<code>themes</code>下的<code>_config.yml</code>进行编辑，设置文章过期提醒如下：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 文章过期提醒设置</span></span><br><span class="line"><span class="comment"># limit_day: 距离更新时间多少天才显示提醒</span></span><br><span class="line"><span class="comment"># style: flat 样式(simple/flat)</span></span><br><span class="line"><span class="attr">noticeOutdate:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">style:</span> <span class="string">flat</span> </span><br><span class="line">  <span class="attr">limit_day:</span> <span class="number">150</span> </span><br><span class="line">  <span class="attr">position:</span> <span class="string">top</span></span><br><span class="line">  <span class="attr">message_prev:</span> <span class="string">请注意，本文更新于</span></span><br><span class="line">  <span class="attr">message_next:</span> <span class="string">天前，其中某些内容可能已经过时。</span></span><br></pre></td></tr></table></figure>

<h3 id="5-8-评论系统配置"><a href="#5-8-评论系统配置" class="headerlink" title="5.8 评论系统配置"></a>5.8 评论系统配置</h3><p><code>Valine</code>是一款快速、简洁且高效的无后端评论系统，使用<code>Valine</code>需要前往<a href="https://www.leancloud.cn/">LeanCloud</a>进行注册并登陆，进入控制台后点击创建应用</p>
<p><img src="https://i.loli.net/2021/04/23/kbLB3zo95dKHf8I.png" alt="LeanCloud创建应用.png"></p>
<p>点击创建好的应用，在左侧导航栏选择设置，点击应用Keys查看<code>AppID</code>和<code>AppKey</code>。</p>
<p><img src="https://i.loli.net/2021/04/23/co95naX3gdBDurp.png" alt="LeanCloud获取key.png"></p>
<p>获取<code>AppID</code>和<code>AppKey</code>后，对博客根目录下<code>themes</code>下的<code>_config.yml</code>进行编辑，设置评论系统为<code>Valine</code>：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 评论系统设置</span></span><br><span class="line"><span class="comment"># use: 双评论系统设置，第一个为默认评论系统</span></span><br><span class="line"><span class="comment">#   -  评论系统选择: Disqus/Disqusjs/Livere/Gitalk/Valine/Waline/Utterances/Facebook Comments/Twikoo</span></span><br><span class="line"><span class="comment"># text: 按钮旁显示评论系统名称</span></span><br><span class="line"><span class="comment"># lazyload: 懒加载，开启后，只有滚动到评论位置时才会加载评论所需要的资源，评论数不显示</span></span><br><span class="line"><span class="comment"># count: 文章顶部显示评论数</span></span><br><span class="line"><span class="comment"># card_post_count: 主页文章卡片显示评论数</span></span><br><span class="line"><span class="attr">comments:</span></span><br><span class="line">  <span class="attr">use:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">Valine</span></span><br><span class="line">    <span class="comment">#- Disqus</span></span><br><span class="line">  <span class="attr">text:</span> <span class="literal">true</span> </span><br><span class="line">  <span class="attr">lazyload:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">count:</span> <span class="literal">true</span> </span><br><span class="line">  <span class="attr">card_post_count:</span> <span class="literal">true</span> </span><br><span class="line"></span><br><span class="line"><span class="comment"># valine</span></span><br><span class="line"><span class="comment"># https://valine.js.org</span></span><br><span class="line"><span class="attr">valine:</span></span><br><span class="line">  <span class="attr">appId:</span> 								                                  <span class="comment"># leancloud application app id</span></span><br><span class="line">  <span class="attr">appKey:</span> 							                                      <span class="comment"># leancloud application app key</span></span><br><span class="line">  <span class="attr">tagMeta:</span> <span class="string">博主,小伙伴,访客</span>                                               <span class="comment"># 评论者标识</span></span><br><span class="line">  <span class="attr">master:</span> 									                              <span class="comment"># 博主md5加密邮箱</span></span><br><span class="line">  <span class="attr">nickPlaceholder:</span> <span class="string">QQ号(输入QQ会自动补全邮箱)</span>                             <span class="comment"># 昵称占位符  </span></span><br><span class="line">  <span class="attr">mailPlaceholder:</span> <span class="string">邮箱</span>                                                   <span class="comment"># 邮箱占位符  </span></span><br><span class="line">  <span class="attr">placeholder:</span> <span class="string">填写QQ可以及时收到回复哦(●\&#x27;◡\&#x27;●)~</span>                         <span class="comment"># 评论区占位符</span></span><br><span class="line">  <span class="attr">avatar:</span> <span class="string">monsterid</span>                                                       <span class="comment"># 默认头像样式 https://valine.js.org/#/avatar</span></span><br><span class="line">  <span class="attr">guest_info:</span> <span class="string">nick,mail</span>                                                   <span class="comment"># 评论者信息(昵称，邮箱，链接)</span></span><br><span class="line">  <span class="attr">pageSize:</span> <span class="number">10</span>                                                            <span class="comment"># 评论列表每页最大数目</span></span><br><span class="line">  <span class="attr">lang:</span> <span class="string">zh-CN</span>                                                             <span class="comment"># 语言设置(zh-CN/zh-TW/en/ja)</span></span><br><span class="line">  <span class="attr">recordIP:</span> <span class="literal">true</span>                                                          <span class="comment"># 是否记录评论者IP</span></span><br><span class="line">  <span class="attr">bg:</span> 																	  <span class="comment"># 评论区背景图</span></span><br><span class="line">  <span class="attr">emojiCDN:</span> <span class="string">https://cdn.jsdelivr.net/gh/GentleTK/cdn-source@latest/emoji/</span> <span class="comment"># emoji CDN</span></span><br><span class="line">  <span class="attr">enableQQ:</span> <span class="literal">true</span>                                                          <span class="comment"># 允许获取QQ头像</span></span><br><span class="line">  <span class="attr">requiredFields:</span> <span class="string">nick,mail</span>                                               <span class="comment"># 必填项(nick/mail)</span></span><br><span class="line">  <span class="attr">visitor:</span> <span class="literal">true</span>                                                           <span class="comment"># 文章访问量统计</span></span><br><span class="line">  <span class="attr">option:</span> </span><br><span class="line"></span><br><span class="line"><span class="comment"># CDN</span></span><br><span class="line"><span class="comment"># 设置Valine的CDN为魔改后的</span></span><br><span class="line"><span class="attr">CDN:</span></span><br><span class="line">  <span class="comment">#valine: https://cdn.jsdelivr.net/npm/valine/dist/Valine.min.js</span></span><br><span class="line">  <span class="attr">valine:</span> <span class="string">https://cdn.jsdelivr.net/gh/GentleTK/cdn-source@latest/js/Valine.min.js</span></span><br></pre></td></tr></table></figure>

<h3 id="5-9-音乐播放器配置"><a href="#5-9-音乐播放器配置" class="headerlink" title="5.9 音乐播放器配置"></a>5.9 音乐播放器配置</h3><h4 id="5-9-1-安装插件"><a href="#5-9-1-安装插件" class="headerlink" title="5.9.1 安装插件"></a>5.9.1 安装插件</h4><p>鼠标右键单击选择Git Bash，打开终端，在博客根目录下输入以下命令安装音乐播放器插件：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install --save hexo-tag-aplayer</span><br></pre></td></tr></table></figure>

<h4 id="5-9-2-引入MeingJS"><a href="#5-9-2-引入MeingJS" class="headerlink" title="5.9.2 引入MeingJS"></a>5.9.2 引入MeingJS</h4><p>安装完成后，对博客根目录下的<code>_config.yml</code>进行修改，添加如下配置：</p>
<div class="note warning flat"><p>注意，是博客根目录下的<code>_config.yml</code>!</p>
</div>

<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 音乐播放器</span></span><br><span class="line"><span class="attr">aplayer:</span></span><br><span class="line">  <span class="attr">meting:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">asset_inject:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure>

<h4 id="5-9-3-插入代码"><a href="#5-9-3-插入代码" class="headerlink" title="5.9.3 插入代码"></a>5.9.3 插入代码</h4><p>然后对博客根目录下<code>themes</code>下的<code>_config.yml</code>进行编辑，设置主題的<code>aplayerInject</code>如下并插入代码：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Inject the css and script (aplayer/meting)</span></span><br><span class="line"><span class="attr">aplayerInject:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">per_page:</span> <span class="literal">true</span></span><br><span class="line">  </span><br><span class="line"><span class="comment"># Inject</span></span><br><span class="line"><span class="comment"># Insert the code to head (before &#x27;&lt;/head&gt;&#x27; tag) and the bottom (before &#x27;&lt;/body&gt;&#x27; tag)</span></span><br><span class="line"><span class="comment"># 插入代码到头部 &lt;/head&gt; 之前 和 底部 &lt;/body&gt; 之前</span></span><br><span class="line"><span class="attr">inject:</span></span><br><span class="line">  <span class="attr">head:</span></span><br><span class="line">    <span class="comment"># - &lt;link rel=&quot;stylesheet&quot; href=&quot;/xxx.css&quot;&gt;</span></span><br><span class="line">  <span class="attr">bottom:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&lt;div</span> <span class="string">class=&quot;aplayer</span> <span class="literal">no</span><span class="string">-destroy&quot;</span> <span class="string">data-id=&quot;NetEasePlaylistID&quot;</span> <span class="string">data-server=&quot;netease&quot;</span> <span class="string">data-type=&quot;playlist&quot;</span> <span class="string">data-fixed=&quot;true&quot;</span> <span class="string">data-mini=&quot;true&quot;</span> <span class="string">data-listFolded=&quot;false&quot;</span> <span class="string">data-order=&quot;random&quot;</span> <span class="string">data-preload=&quot;none&quot;</span> <span class="string">data-autoplay=&quot;true&quot;</span> <span class="string">muted&gt;&lt;/div&gt;</span></span><br><span class="line">    <span class="comment"># - &lt;script src=&quot;xxxx&quot;&gt;&lt;/script&gt;</span></span><br></pre></td></tr></table></figure>

<p>其中参数的描述如下所示：</p>
<table>
<thead>
<tr>
<th align="left">选项</th>
<th align="left">默认值</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left">data-id</td>
<td align="left">必须值</td>
<td align="left">歌曲 id / 播放列表 id / 相册 id / 搜索关键字</td>
</tr>
<tr>
<td align="left">data-server</td>
<td align="left">必须值</td>
<td align="left">音乐平台: netease, tencent, kugou, xiami, baidu</td>
</tr>
<tr>
<td align="left">data-type</td>
<td align="left">必须值</td>
<td align="left">song, playlist, album, search, artist</td>
</tr>
<tr>
<td align="left">data-fixed</td>
<td align="left">false</td>
<td align="left">开启固定模式</td>
</tr>
<tr>
<td align="left">data-mini</td>
<td align="left">false</td>
<td align="left">开启迷你模式</td>
</tr>
<tr>
<td align="left">data-listfolded</td>
<td align="left">false</td>
<td align="left">指定音乐播放列表是否折叠</td>
</tr>
<tr>
<td align="left">data-order</td>
<td align="left">list</td>
<td align="left">列表播放模式： list, random</td>
</tr>
<tr>
<td align="left">data-preload</td>
<td align="left">auto</td>
<td align="left">音乐文件预载入模式，可选项： none, metadata, auto</td>
</tr>
<tr>
<td align="left">data-autoplay</td>
<td align="left">true</td>
<td align="left">自动播放，移动端浏览器暂时不支持此功能</td>
</tr>
<tr>
<td align="left">data-loop</td>
<td align="left">all</td>
<td align="left">列表循环模式：all, one,none</td>
</tr>
<tr>
<td align="left">data-volume</td>
<td align="left">0.7</td>
<td align="left">播放器音量</td>
</tr>
<tr>
<td align="left">data-lrctype</td>
<td align="left">0</td>
<td align="left">歌词格式类型</td>
</tr>
<tr>
<td align="left">data-storagename</td>
<td align="left">metingjs</td>
<td align="left">LocalStorage 中存储播放器设定的键名</td>
</tr>
<tr>
<td align="left">data-mutex</td>
<td align="left">true</td>
<td align="left">该选项开启时，如果同页面有其他 aplayer 播放，该播放器会暂停</td>
</tr>
<tr>
<td align="left">data-listmaxheight</td>
<td align="left">340px</td>
<td align="left">播放列表的最大长度</td>
</tr>
<tr>
<td align="left">data-theme</td>
<td align="left">#ad7a86</td>
<td align="left">播放器风格色彩设置</td>
</tr>
</tbody></table>
<div class="note info flat"><p>如果想在页面跳转后，音乐不会中断，需要设置博客根目录下<code>themes</code>下的<code>_config.yml</code>文件中的<code>pjax</code>为<code>true</code>。</p>
</div>

<h3 id="5-10-标签外挂配置"><a href="#5-10-标签外挂配置" class="headerlink" title="5.10 标签外挂配置"></a>5.10 标签外挂配置</h3><p>对博客根目录下<code>themes</code>下的<code>_config.yml</code>进行编辑，设置标签外挂如下：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Note (Bootstrap Callout)</span></span><br><span class="line"><span class="comment"># style: simple/modern/flat/disable</span></span><br><span class="line"><span class="attr">note:</span></span><br><span class="line">  <span class="attr">style:</span> <span class="string">flat</span></span><br><span class="line">  <span class="attr">icons:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">border_radius:</span> <span class="number">3</span></span><br><span class="line">  <span class="attr">light_bg_offset:</span> <span class="number">0</span></span><br></pre></td></tr></table></figure>

<h4 id="5-10-1-default提示块标签"><a href="#5-10-1-default提示块标签" class="headerlink" title="5.10.1 default提示块标签"></a>5.10.1 default提示块标签</h4><ol>
<li>simple样式<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% note default simple %&#125;</span><br><span class="line">default 提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>
<div class="note default simple"><p>default 提示块标签</p>
</div></li>
<li>modern样式<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% note default modern %&#125;</span><br><span class="line">default 提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>
<div class="note default modern"><p>default 提示块标签</p>
</div></li>
<li>flat样式<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% note default flat %&#125;</span><br><span class="line">default 提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>
<div class="note default flat"><p>default 提示块标签</p>
</div></li>
<li>disable样式<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% note default disable %&#125;</span><br><span class="line">default 提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>
<div class="note default disable flat"><p>default 提示块标签</p>
</div></li>
</ol>
<h4 id="5-10-2-primary提示块标签"><a href="#5-10-2-primary提示块标签" class="headerlink" title="5.10.2 primary提示块标签"></a>5.10.2 primary提示块标签</h4><ol>
<li>simple样式<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% note primary simple %&#125;</span><br><span class="line">primary提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>
<div class="note primary simple"><p>primary提示块标签</p>
</div></li>
<li>modern样式<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% note primary modern %&#125;</span><br><span class="line">primary提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>
<div class="note primary modern"><p>primary提示块标签</p>
</div></li>
<li>flat样式<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% note primary flat %&#125;</span><br><span class="line">primary提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>
<div class="note primary flat"><p>primary提示块标签</p>
</div></li>
<li>disable样式<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% note primary disable %&#125;</span><br><span class="line">primary提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>
<div class="note primary disable flat"><p>primary提示块标签</p>
</div></li>
</ol>
<h4 id="5-10-3-success提示块标签"><a href="#5-10-3-success提示块标签" class="headerlink" title="5.10.3 success提示块标签"></a>5.10.3 success提示块标签</h4><ol>
<li>simple样式<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% note success simple %&#125;</span><br><span class="line">success提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>
<div class="note success simple"><p>success提示块标签</p>
</div></li>
<li>modern样式<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% note success modern %&#125;</span><br><span class="line">success提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>
<div class="note success modern"><p>success提示块标签</p>
</div></li>
<li>flat样式<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% note success flat %&#125;</span><br><span class="line">success提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>
<div class="note success flat"><p>success提示块标签</p>
</div></li>
<li>disable样式<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% note success disable %&#125;</span><br><span class="line">success提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>
<div class="note success disable flat"><p>success提示块标签</p>
</div></li>
</ol>
<h4 id="5-10-4-info提示块标签"><a href="#5-10-4-info提示块标签" class="headerlink" title="5.10.4 info提示块标签"></a>5.10.4 info提示块标签</h4><ol>
<li>simple样式<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% note info simple %&#125;</span><br><span class="line">info提示块标签签</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>
<div class="note info simple"><p>info提示块标签签</p>
</div></li>
<li>modern样式<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% note info modern %&#125;</span><br><span class="line">info提示块标签签</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>
<div class="note info modern"><p>info提示块标签签</p>
</div></li>
<li>flat样式<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% note info flat %&#125;</span><br><span class="line">info提示块标签签</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>
<div class="note info flat"><p>info提示块标签签</p>
</div></li>
<li>disable样式<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% note info disable %&#125;</span><br><span class="line">info提示块标签签</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>
<div class="note info disable flat"><p>info提示块标签签</p>
</div></li>
</ol>
<h4 id="5-10-5-warning提示块标签"><a href="#5-10-5-warning提示块标签" class="headerlink" title="5.10.5 warning提示块标签"></a>5.10.5 warning提示块标签</h4><ol>
<li>simple样式<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% note warning simple %&#125;</span><br><span class="line">warning提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>
<div class="note warning simple"><p>warning提示块标签</p>
</div></li>
<li>modern样式<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% note warning modern %&#125;</span><br><span class="line">warning提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>
<div class="note warning modern"><p>warning提示块标签</p>
</div></li>
<li>flat样式<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% note warning flat %&#125;</span><br><span class="line">warning提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>
<div class="note warning flat"><p>warning提示块标签</p>
</div></li>
<li>disable样式<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% note warning disable %&#125;</span><br><span class="line">warning提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>
<div class="note warning disable flat"><p>warning提示块标签</p>
</div></li>
</ol>
<h4 id="5-10-6-danger提示块标签"><a href="#5-10-6-danger提示块标签" class="headerlink" title="5.10.6 danger提示块标签"></a>5.10.6 danger提示块标签</h4><ol>
<li>simple样式<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% note danger simple %&#125;</span><br><span class="line">danger提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>
<div class="note danger simple"><p>danger提示块标签</p>
</div></li>
<li>modern样式<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% note danger modern %&#125;</span><br><span class="line">danger提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>
<div class="note danger modern"><p>danger提示块标签</p>
</div></li>
<li>flat样式<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% note danger flat %&#125;</span><br><span class="line">danger提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>
<div class="note danger flat"><p>danger提示块标签</p>
</div></li>
<li>disable样式<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% note danger disable %&#125;</span><br><span class="line">danger提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>
<div class="note danger disable flat"><p>danger提示块标签</p>
</div></li>
</ol>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>技术</tag>
        <tag>Hexo</tag>
      </tags>
  </entry>
</search>
